<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on Yuvi</title>
    <link>https://words.yuvi.in/tags/code/</link>
    <description>Recent content in Code on Yuvi</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 15 Dec 2021 12:16:47 +0530</lastBuildDate>
    <atom:link href="https://words.yuvi.in/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Disabling JupyterLab extensions on your z2jh JupyterHub installations</title>
      <link>https://words.yuvi.in/post/jupyterlab-settings-z2jh/</link>
      <pubDate>Wed, 15 Dec 2021 12:16:47 +0530</pubDate>
      <guid>https://words.yuvi.in/post/jupyterlab-settings-z2jh/</guid>
      <description>&lt;p&gt;Sometimes you want to temporarily disable a JupyterLab extension on a JupyterHub&#xA;by default, without having to rebuild your docker image. This can be very&#xA;easily done with z2jh&amp;rsquo;s &lt;a href=&#34;https://zero-to-jupyterhub.readthedocs.io/en/latest/resources/reference.html#singleuser-extrafiles&#34;&gt;singleuser.extraFiles&lt;/a&gt;,&#xA;and JupyterLab&amp;rsquo;s &lt;a href=&#34;https://jupyterlab.readthedocs.io/en/stable/user/directories.html#labconfig-directories&#34;&gt;page_config.json&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;JupyterLab&amp;rsquo;s &lt;code&gt;page_config.json&lt;/code&gt; lets you set page configuration by dropping JSON files&#xA;under a &lt;code&gt;labconfig&lt;/code&gt; directory inside any of the directories listed when you run &lt;code&gt;jupyter --paths&lt;/code&gt;.&#xA;We just use &lt;code&gt;singleuser.extraFiles&lt;/code&gt; to provide this file!&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;singleuser&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;extraFiles&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;lab-config&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;mountPath&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;/etc/jupyter/labconfig/page_config.json&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;disabledExtensions&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;jupyterlab-link-share&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will disable the &lt;a href=&#34;https://github.com/jupyterlab-contrib/jupyterlab-link-share&#34;&gt;link-share&lt;/a&gt;&#xA;labextension, both in JupyterLab and RetroLab. You can find the name of the&#xA;extension, as well as its current status, with &lt;code&gt;jupyter labextension list&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The fastest way to share your notebooks - announcing NotebookSharing.space</title>
      <link>https://words.yuvi.in/post/announcing-notebooksharing-space/</link>
      <pubDate>Tue, 16 Nov 2021 20:43:11 +0530</pubDate>
      <guid>https://words.yuvi.in/post/announcing-notebooksharing-space/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://words.yuvi.in/images/nbss-logo.svg&#34; alt=&#34;NotebookSharing.space logo&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Sharing notebooks is harder than it should be&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;You are working on a notebook (in Jupyter, RStudio, Visual Studio Code, whatever), and want&#xA;to share it quickly with someone. Maybe you want some feedback, or you&amp;rsquo;re demonstrating&#xA;a technique, or there is a cool result you want to quickly show someone. A million reasons&#xA;to want to quickly share a notebook, but unfortunately there isn&amp;rsquo;t a quick enough and&#xA;easy enough solution right now. That&amp;rsquo;s why I built &lt;a href=&#34;https://notebooksharing.space&#34;&gt;notebooksharing.space&lt;/a&gt;,&#xA;focused specifically on solving the problem of - &amp;ldquo;I have a notebook, I want to quickly&#xA;share it with someone else&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Announcing the nbgitpuller Link Generator browser extensions</title>
      <link>https://words.yuvi.in/post/nbgitpuller-link-generator-extension/</link>
      <pubDate>Tue, 16 Nov 2021 18:58:28 +0530</pubDate>
      <guid>https://words.yuvi.in/post/nbgitpuller-link-generator-extension/</guid>
      <description>&lt;p&gt;(Leave comments or discuss this post on the &lt;a href=&#34;https://discourse.jupyter.org/t/announcing-the-nbgitpuller-link-generator-browser-extensions/11701&#34;&gt;jupyter discourse&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jupyterhub.github.io/nbgitpuller&#34;&gt;nbgitpuller&lt;/a&gt; is my most favorite way to distribute&#xA;content (notebooks, data files, etc) to students on a JupyterHub. The student mental model is&#xA;&amp;lsquo;I click a link, and can start working on my notebook&amp;rsquo;, which is as close to ideal as we have today.&#xA;That is possible since &lt;em&gt;all&lt;/em&gt; the information required for this workflow is embedded in the link&#xA;itself - so it can be distributed easily via your pre-existing communication channel (like&#xA;email, &lt;a href=&#34;http://data8.org/sp21/&#34;&gt;course website&lt;/a&gt;, etc), rather than requiring your students to use&#xA;yet another tool.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why repo2docker? Why not s2i?</title>
      <link>https://words.yuvi.in/post/why-not-s2i/</link>
      <pubDate>Sun, 03 Dec 2017 01:23:54 -0800</pubDate>
      <guid>https://words.yuvi.in/post/why-not-s2i/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://imgs.xkcd.com/comics/standards.png&#34; alt=&#34;https://xkcd.com/927/&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The wonderful &lt;a href=&#34;https://twitter.com/GrahamDumpleton&#34;&gt;Graham Dumpleton&lt;/a&gt; asked &lt;a href=&#34;https://twitter.com/GrahamDumpleton/status/936740552304836608&#34;&gt;on twitter&lt;/a&gt; why we built an entirely new tool (&lt;a href=&#34;https://github.com/jupyter/repo2docker&#34;&gt;repo2docker&lt;/a&gt;) instead of using OpenShift&amp;rsquo;s cool &lt;a href=&#34;https://github.com/openshift/source-to-image&#34;&gt;source2image&lt;/a&gt; tool.&lt;/p&gt;&#xA;&lt;p&gt;This is a very good question, and not a decision we made lightly. This post lays out some history, and explains the reasons we decided to stop using s2i. s2i is still a great tool for most production use cases, and you should use it if you&amp;rsquo;re building anything like a PaaS!&lt;/p&gt;</description>
    </item>
    <item>
      <title>systemd simple containment for GUI applications &amp; shells</title>
      <link>https://words.yuvi.in/post/systemd-simple-containment/</link>
      <pubDate>Fri, 31 Mar 2017 23:23:52 -0700</pubDate>
      <guid>https://words.yuvi.in/post/systemd-simple-containment/</guid>
      <description>&lt;p&gt;I earlier had &lt;a href=&#34;http://words.yuvi.in/post/systemd-gui-applications/&#34;&gt;a vaguely working setup&lt;/a&gt; for making sure browsers, shells and other applications don&amp;rsquo;t eat all RAM / CPU on my machine with systemd + sudo + shell scripts.&lt;/p&gt;&#xA;&lt;p&gt;It was a hacky solution, and also had complications when used to launch shells. It wasn&amp;rsquo;t passing in all the environment varialbes it should, causing interesting-to-debug issues. &lt;code&gt;sudo&lt;/code&gt; rules were complex, and hard to do securely.&lt;/p&gt;&#xA;&lt;p&gt;I had also been looking for an excuse to learn more Golang, so I ended up writing &lt;a href=&#34;https://github.com/yuvipanda/systemd-simple-containment&#34;&gt;&lt;code&gt;systemd-simple-containment&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;ssc&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>systemd gui applications</title>
      <link>https://words.yuvi.in/post/systemd-gui-applications/</link>
      <pubDate>Wed, 29 Mar 2017 20:47:10 -0700</pubDate>
      <guid>https://words.yuvi.in/post/systemd-gui-applications/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: There&amp;rsquo;s a &lt;a href=&#34;//words.yuvi.in/post/systemd-simple-containment/&#34;&gt;follow-up post&lt;/a&gt; with a simpler solution now.&lt;/p&gt;&#xA;&lt;p&gt;Ever since I read &lt;a href=&#34;https://blog.jessfraz.com&#34;&gt;Jessie Frazelle&lt;/a&gt;&amp;rsquo;s amazing setup (&lt;a href=&#34;https://blog.jessfraz.com/post/ultimate-linux-on-the-desktop/&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://blog.jessfraz.com/post/docker-containers-on-the-desktop/&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;https://blog.jessfraz.com/post/runc-containers-on-the-desktop/&#34;&gt;3&lt;/a&gt;) for running GUI applications in docker containers, I&amp;rsquo;ve wanted to do something similar. However, I want to install things on my computer - not in docker images. So what I wanted was just isolation (no more Chrome / Firefox freezing my laptop), not images. I&amp;rsquo;m also not as awesome (or knowledgeable!) as Jess, so will have to naturally settle for less&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Vim setup</title>
      <link>https://words.yuvi.in/my-vim-setup/</link>
      <pubDate>Tue, 23 Aug 2011 22:55:03 +0000</pubDate>
      <guid>https://words.yuvi.in/my-vim-setup/</guid>
      <description>&lt;p&gt;I &lt;a href=&#34;http://yuvi.in/blog/moving-to-vim-from-emacs.html&#34;&gt;moved&lt;/a&gt; from emacs to vim a while ago, and have been steadily accumulating a series of plugins in my &lt;code&gt;.vim&lt;/code&gt;. They’re all up in my rather messy &lt;a href=&#34;http://github.com/yuvipanda/dotfiles&#34;&gt;dotfiles repo&lt;/a&gt;. Here’s a slightly more neatly organized list of the plugins I currently use:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3025&#34;&gt;command-t&lt;/a&gt; – File opener and buffer switcher. In-fuckin-credibly useful.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1953&#34;&gt;vimpress&lt;/a&gt; – What I use to blog since &lt;a href=&#34;http://yuvi.in/blog/moving-back-to-wordpress/&#34;&gt;moving to wordpress&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=39&#34;&gt;matchit&lt;/a&gt; – Lets &lt;code&gt;%&lt;/code&gt; work with html tags&lt;/li&gt;&#xA;&lt;li&gt;&lt;s&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3695&#34;&gt;commentary&lt;/a&gt; – Generic commenting and uncommenting script&lt;/s&gt; &lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1218&#34;&gt;NERDCommenter&lt;/a&gt; has replaced commentary due to being more flexible and having more options.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2975&#34;&gt;fugitive&lt;/a&gt; – Incredibly awesome git wrapper for vim. I rarely go to the commandline for git these days&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3465&#34;&gt;tagbar&lt;/a&gt; – Useful code-exploratory plugin when I’m looking around a codebase trying to familiarize myself.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1643&#34;&gt;supertab&lt;/a&gt; – Buffer completion in insert mode only when I need it.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2423&#34;&gt;gist&lt;/a&gt; – Put stuff up in gist to pass it around&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=559&#34;&gt;BufClose&lt;/a&gt; – So I can close a buffer without messing up my splits&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3509&#34;&gt;extradite&lt;/a&gt; – &lt;code&gt;:Glog&lt;/code&gt; replacement that builds on top of fugitive. I don’t understand why this isn’t bundled with fugitive&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2204&#34;&gt;TwitVim&lt;/a&gt; – Yes, so I don’t have to go to the browser (and be consumed by chat/reddit/hn) just to post a tweet.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2572&#34;&gt;ack.vim&lt;/a&gt; – Ack integration for vim. Do yourself a favor and use &lt;a href=&#34;http://betterthangrep.com&#34;&gt;ack&lt;/a&gt; instead of grep.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2736&#34;&gt;Syntastic&lt;/a&gt; – Automatic syntax checking so that I don’t miss a semicolon and not know about it&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1355&#34;&gt;php-doc&lt;/a&gt; – Insert boilerplate PHP doc compatible strings in my PHP files whenever I want to. Very PHP specific, need to find something that works across languages. (Note: This plugin has quite some identity crisis. It’s named PDV but it’s filename is php-doc. Since php-doc is more descriptive, I’m using that)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2754&#34;&gt;delimitMate&lt;/a&gt; – Automatically closes quotes, parens, braces, etc for you. I initially thought this would be super annoying, but in fact it is rather very pleasant.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;s&gt;I’m also on the default &lt;code&gt;desert&lt;/code&gt; color theme – haven’t found anything better. Suggestions welcome – both for the color scheme and for new/replacement plugins.&lt;/s&gt; After trying out &lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1778&#34;&gt;wombat&lt;/a&gt; and &lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2555&#34;&gt;jellybeans&lt;/a&gt; color schemes, I have settled on wombat for now.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Non-ASCII Characters in HTTP Headers</title>
      <link>https://words.yuvi.in/non-ascii-characters-http-headers/</link>
      <pubDate>Sat, 13 Aug 2011 00:56:10 +0000</pubDate>
      <guid>https://words.yuvi.in/non-ascii-characters-http-headers/</guid>
      <description>&lt;p&gt;I was debugging an issue &lt;a href=&#34;http://interviewstreet.com&#34;&gt;at work&lt;/a&gt; today where a (generated) file refused to download in Chrome, but the same URL worked just fine with wget. I remember reading in the &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec2.html#sec2.2&#34;&gt;HTTP Spec&lt;/a&gt; that HTTP headers can only be lower ASCII, so when wget mangled the output file’s name, the problem was obvious – the file name contained a character that wasn’t in lower ASCII (an accented A). Chrome had borked on encountering it, while wget soldiered on. Using &lt;code&gt;iconv&lt;/code&gt; to strip non-ASCII characters in the file name on the server side fixed the issue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>You are a programmer if you can run code in your head</title>
      <link>https://words.yuvi.in/programmer-run-code-head/</link>
      <pubDate>Thu, 11 Aug 2011 04:09:23 +0000</pubDate>
      <guid>https://words.yuvi.in/programmer-run-code-head/</guid>
      <description>&lt;p&gt;From &lt;a href=&#34;http://news.ycombinator.com/item?id=2870176&#34;&gt;HN&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;From my experience, the largest hurdle first time programmers have is being able to execute programs in their head. &lt;strong&gt;&lt;em&gt;It takes a cognitive leap to go from the source code in front of them, and what happens at runtime&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;(emphasis mine)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;I believe that if you have made that &lt;em&gt;cognitive leap&lt;/em&gt;, you can call yourself a programmer. It means you’ve entered into the &lt;a href=&#34;http://www.codinghorror.com/blog/2006/07/separating-programming-sheep-from-non-programming-goats.html&#34;&gt;second hump&lt;/a&gt; – you are a programmer. One of us. Welcome :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>SleepSort from 4Chan</title>
      <link>https://words.yuvi.in/sleepsort-4chan/</link>
      <pubDate>Sun, 19 Jun 2011 01:40:36 +0000</pubDate>
      <guid>https://words.yuvi.in/sleepsort-4chan/</guid>
      <description>&lt;p&gt;4Chan isn’t exactly what you’d associate with ‘shit, that’s a cool piece of code!’, but look &lt;a href=&#34;http://dis.4chan.org/read/prog/1295544154&#34;&gt;what I found&lt;/a&gt;!&lt;/p&gt;&#xA;&lt;p&gt;(&lt;a href=&#34;http://news.ycombinator.com/item?id=2657277&#34;&gt;via HN&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;Nice hack. And it &lt;strong&gt;is&lt;/strong&gt; &lt;code&gt;O(N)&lt;/code&gt; in bitsize of largest number (Ignoring all the overhead of forking new processes, the problem with the race conditions(Sort 0 and 0.1? How about 0.01 and 0.011?), processor contention, etc,.) They basically delegated the sorting to the process scheduler, treating it as a sort of priority queue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Moving back to WordPress</title>
      <link>https://words.yuvi.in/moving-back-to-wordpress/</link>
      <pubDate>Mon, 06 Jun 2011 18:21:40 +0000</pubDate>
      <guid>https://words.yuvi.in/moving-back-to-wordpress/</guid>
      <description>&lt;p&gt;A while back, I &lt;a href=&#34;http://yuvi.in/blog/hello-world-again/&#34;&gt;moved my blog&lt;/a&gt; (from a wordpress install whose data I lost) to my own platform (&lt;a href=&#34;http://github.com/yuvipanda/HiSlain&#34;&gt;HiSlain&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;After several close calls, I’m officially moving from HiSlain back to WordPress. I just don’t have enough time to maintain all the things I wanted in a blog platform in HiSlain, hence the move back. However, it satisfied it’s purpose – I learnt to write code I could use, others could use, and &lt;a href=&#34;https://github.com/tamizhgeek/HiSlain&#34;&gt;others could contribute to&lt;/a&gt;. The &lt;a href=&#34;http://yuvi.in/blog/oldindex.html&#34;&gt;old blog&lt;/a&gt; is still around (all permalinks would work) if you’re interested.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SICP and BrainFuck</title>
      <link>https://words.yuvi.in/sicp-and-brainfuck/</link>
      <pubDate>Fri, 13 May 2011 05:10:31 +0000</pubDate>
      <guid>https://words.yuvi.in/sicp-and-brainfuck/</guid>
      <description>&lt;p&gt;No, I’m &lt;em&gt;not&lt;/em&gt; going to blow your mind by telling you I’m going to do the SICP exercises in BrainFuck :)&lt;/p&gt;&#xA;&lt;p&gt;I just wrote &lt;a href=&#34;https://gist.github.com/969657&#34;&gt;my first brainfuck program&lt;/a&gt;. Might as well be my last, but not sure. Tape-based turing-ish programing seems fun, so maybe I’ll try that again with something more expressive than brainfuck (or maybe that is pointless?)&lt;/p&gt;&#xA;&lt;p&gt;And I’m doing the SICP Exercises. In &lt;a href=&#34;http://groups.csail.mit.edu/mac/projects/scheme/&#34;&gt;MIT-Scheme&lt;/a&gt;. I’ve put them &lt;a href=&#34;https://github.com/yuvipanda/sicp-exercises&#34;&gt;up on GitHub&lt;/a&gt;. I’m doing this with the &lt;a href=&#34;http://fpug-c.posterous.com/&#34;&gt;FPUG-C&lt;/a&gt; SICP Study Group, so hope I’m able to complete it all this time :) Big props to &lt;a href=&#34;http://www.openbala.com/&#34;&gt;Balaji&lt;/a&gt; for organizing it, and letting us get away with the free coke and coffee!&lt;/p&gt;</description>
    </item>
    <item>
      <title>GStreamer 101 at GNOME Asia 2011</title>
      <link>https://words.yuvi.in/gstreamer-101-at-gnome-asia-2011/</link>
      <pubDate>Sun, 10 Apr 2011 23:02:48 +0000</pubDate>
      <guid>https://words.yuvi.in/gstreamer-101-at-gnome-asia-2011/</guid>
      <description>&lt;p&gt;My &lt;code&gt;GStreamer 101&lt;/code&gt; presentation at &lt;a href=&#34;http://gnome.asia&#34;&gt;GNOME.asia&lt;/a&gt; was &lt;em&gt;very&lt;/em&gt; wel received. I was quite happy with the way it turned out. Thanks to &lt;a href=&#34;http://arunraghavan.net/&#34;&gt;Ford_Prefect&lt;/a&gt; and &lt;a href=&#34;http://abharath.wordpress.com/&#34;&gt;Bharath Acharya&lt;/a&gt; for pulling me in :)&lt;/p&gt;&#xA;&lt;p&gt;My very minimal slides are &lt;a href=&#34;http://www.slideshare.net/yuvipanda/gstreamer-101&#34;&gt;here&lt;/a&gt;. You can reuse them if you want to.&lt;/p&gt;&#xA;&lt;p&gt;Sadly, missed the week long hackfest :( Next time!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
