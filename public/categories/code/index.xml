<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on Yuvi</title>
    <link>https://words.yuvi.in/categories/code/</link>
    <description>Recent content in Code on Yuvi</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Nov 2022 23:17:53 -0800</lastBuildDate>
    <atom:link href="https://words.yuvi.in/categories/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installing Python (and other packages) from conda-forge in GitHub Actions</title>
      <link>https://words.yuvi.in/post/conda-forge-github-actions/</link>
      <pubDate>Sun, 06 Nov 2022 23:17:53 -0800</pubDate>
      <guid>https://words.yuvi.in/post/conda-forge-github-actions/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hachyderm.io/web/@asm@qoto.org/109294147156073488&#34;&gt;Alex Merose asked me&lt;/a&gt; on Mastodon how to&#xA;best set up a conda environment on GitHub Actions. I thought I&amp;rsquo;d write a short blog post about it!&lt;/p&gt;&#xA;&lt;p&gt;The short version is, use the &lt;a href=&#34;https://github.com/marketplace/actions/setup-miniconda&#34;&gt;conda-incubator/setup-miniconda&lt;/a&gt;&#xA;GitHub action instead of the official &lt;a href=&#34;https://github.com/marketplace/actions/setup-python&#34;&gt;setup-python&lt;/a&gt;&#xA;action. Specifically, try out these options for size:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;conda-incubator/setup-miniconda@v2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Specify python version your environment will have. Remember to quote this, or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# YAML will think you want python 3.1 not 3.10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;python-version&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;3.10&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# This uses *miniforge*, rather than *minicond*. The primary difference is that&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# the defaults channel is not enabled at all&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;miniforge-version&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# These properties enable the use of mamba, which is much faster and far less error&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# prone than conda while being completely compatible with the conda CLI&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;use-mamba&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;mamba-version&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This should give you a python environment named &lt;code&gt;test&lt;/code&gt; with python &lt;code&gt;3.10&lt;/code&gt; (or whatever version&#xA;you specify) and nothing much else. You can then use &lt;a href=&#34;https://github.com/mamba-org/mamba&#34;&gt;&lt;code&gt;mamba&lt;/code&gt;&lt;/a&gt;&#xA;to install packages from &lt;a href=&#34;https://conda-forge.org/&#34;&gt;conda-forge&lt;/a&gt; to your heart&amp;rsquo;s content in future&#xA;steps like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Python (instead of bash) to write GitHub actions</title>
      <link>https://words.yuvi.in/post/python-in-github-actions/</link>
      <pubDate>Tue, 01 Nov 2022 23:04:56 -0700</pubDate>
      <guid>https://words.yuvi.in/post/python-in-github-actions/</guid>
      <description>&lt;p&gt;I am not smart enough to consistently write &lt;em&gt;and&lt;/em&gt; debug shell scripts that use &lt;em&gt;any&lt;/em&gt;&#xA;conditional or looping constructs. So as soon as I&amp;rsquo;m writing something in bash that&#xA;requires use of those, I switch to python. This works fine when writing scripts, but&#xA;what to do when writing &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt; workflows?&#xA;You can only write bash in &lt;code&gt;run:&lt;/code&gt; stanzas in your &lt;code&gt;step&lt;/code&gt;s, right?&lt;/p&gt;&#xA;&lt;p&gt;Not at all! You can set the &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell&#34;&gt;shell&lt;/a&gt;&#xA;parameter to anything you want, and the contents of &lt;code&gt;run&lt;/code&gt; will be passed to the shell in the&#xA;form of a file. This allows you to use not just Python, but basically any langauge when writing&#xA;your GitHub actions workflows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shortcut to Show / Hide Terminal in Visual Studio Code</title>
      <link>https://words.yuvi.in/post/show-hide-terminal-vscode/</link>
      <pubDate>Thu, 06 Jan 2022 20:31:13 +0530</pubDate>
      <guid>https://words.yuvi.in/post/show-hide-terminal-vscode/</guid>
      <description>&lt;p&gt;I wanted a single keyboard shortcut that would let me switch between the built-in&#xA;terminal and the editor in vscode. I couldn&amp;rsquo;t find any, so I made a short macro&#xA;using the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=geddski.macros&#34;&gt;VSCode Macros Extension&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;First, you define your macros in &lt;code&gt;settings.json&lt;/code&gt;. You can open up vscode settings&#xA;with &lt;code&gt;Cmd+,&lt;/code&gt;, search for &lt;code&gt;macros&lt;/code&gt;, and edit this under &lt;code&gt;Macros: List&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;macros.list&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;showTerminal&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;workbench.action.terminal.toggleTerminal&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;workbench.action.terminal.focus&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;workbench.action.toggleMaximizedPanel&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;],&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hideTerminal&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;workbench.action.toggleMaximizedPanel&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;workbench.action.terminal.toggleTerminal&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you can bind a keyboard shortcut to it. Open &lt;code&gt;Preferences: Open Keyboard Shortcuts (JSON)&lt;/code&gt;&#xA;from the command palette, and add this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning R</title>
      <link>https://words.yuvi.in/post/learning-r/</link>
      <pubDate>Fri, 14 May 2021 18:56:41 +0530</pubDate>
      <guid>https://words.yuvi.in/post/learning-r/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m paying money to learn datascience with R via &lt;a href=&#34;https://www.coursera.org/learn/data-scientists-tools/home/welcome&#34;&gt;this John Hopkins course&lt;/a&gt; on Coursera. Hopefully I can spend about 4h a week on it.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;&#xA;&lt;p&gt;I try to have a &amp;lsquo;T&amp;rsquo; shaped set of competencies - some competence in a lot of areas, and deeper knowledge in some. Having some competence in many areas lets you notice where a particular skill can be very helpful in solving a problem, and either apply it yourself or bring in someone who can. Interesting problems are found in intersections, and learning this will give me access to more intersections :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>The many ways to access your JupyterHub environment</title>
      <link>https://words.yuvi.in/post/hub-interfaces/</link>
      <pubDate>Mon, 09 Nov 2020 02:15:15 +0530</pubDate>
      <guid>https://words.yuvi.in/post/hub-interfaces/</guid>
      <description>&lt;p&gt;JupyterHub was designed to provide multi-user access to Classic Jupyter notebook and JupyterLab, running on machines far away with access to data &amp;amp; compute your local machines don&amp;rsquo;t have. However, there are a &lt;em&gt;lot&lt;/em&gt; of users this leaves out - R users on RStudio, folks who prefer &lt;code&gt;ssh&lt;/code&gt; based interfaces, people on local IDEs like vscode or pycharm, etc. We trust that these users know better than &amp;lsquo;us&amp;rsquo; developers &amp;amp; admins what user interface works best for them, and make sure that our JupyterHub setups work for them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>kbatch: sbatch, but for kubernetes</title>
      <link>https://words.yuvi.in/post/kbatch/</link>
      <pubDate>Sun, 01 Nov 2020 13:40:27 +0530</pubDate>
      <guid>https://words.yuvi.in/post/kbatch/</guid>
      <description>&lt;p&gt;Submitting &amp;rsquo;non-interactive&amp;rsquo; jobs that can run independent of a user&amp;rsquo;s current&#xA;session on a JupyterHub is a pressing problem. There are many many solutions to&#xA;this, but I think there&amp;rsquo;s a lot of value in having an &lt;em&gt;extremely&lt;/em&gt; simple&#xA;solution that solves exactly one extremely well defined problem.&lt;/p&gt;&#xA;&lt;p&gt;We will only consider JupyterHubs running on top of Kubernetes, since that has all the actual capabilities we need to solve this problem. We only need to have a UX wrapper around it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Access dask-kubernetes clusters running on a cloud from your local machine</title>
      <link>https://words.yuvi.in/post/dask-local-kubernetes/</link>
      <pubDate>Sat, 27 Jun 2020 13:27:49 +0530</pubDate>
      <guid>https://words.yuvi.in/post/dask-local-kubernetes/</guid>
      <description>&lt;p&gt;You can run your Jupyter Notebook locally, and connect easily to a remote &lt;code&gt;dask-kubernetes&lt;/code&gt; cluster&#xA;on a cloud-based Kubernetes Cluster with the help of &lt;a href=&#34;https://kubefwd.com/&#34;&gt;kubefwd&lt;/a&gt;. This notebook&#xA;will show you an example of how to do so. While this example is a Jupyter Notebook, the code will work&#xA;any local python medium - REPL, IDE (vscode), or just plain ol&amp;rsquo; &lt;code&gt;.py&lt;/code&gt; files&lt;/p&gt;&#xA;&lt;p&gt;Latest executable version of this notebook can be found in &lt;a href=&#34;https://github.com/yuvipanda/cloud-local-dask-kubernetes&#34;&gt;this repository&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Check if an organization is using GSuite</title>
      <link>https://words.yuvi.in/post/google-domain/</link>
      <pubDate>Thu, 18 Jun 2020 17:01:34 +0530</pubDate>
      <guid>https://words.yuvi.in/post/google-domain/</guid>
      <description>&lt;p&gt;I needed to find out if an organization was using &lt;a href=&#34;https://gsuite.google.com/&#34;&gt;GSuite&lt;/a&gt; for their emails, so I can allow their users to login to a &lt;a href=&#34;https://github.com/berkeley-dsep-infra/datahub/tree/ab2bf49be680480cf9de07968561257e7810850f/deployments/buds-2020&#34;&gt;JupyterHub&lt;/a&gt; I was setting up. I use Google Auth in other places, so I wanted to find out if this organization was using GSuite.&lt;/p&gt;&#xA;&lt;p&gt;I could&amp;rsquo;ve just &lt;em&gt;asked&lt;/em&gt; them, but where&amp;rsquo;s the fun in that? Instead, you can use &lt;code&gt;dig&lt;/code&gt; to find out!&lt;/p&gt;&#xA;&lt;p&gt;For example, if I were to test &lt;code&gt;berkeley.edu&lt;/code&gt;, I can run:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Devlog 2018 12 26</title>
      <link>https://words.yuvi.in/post/devlog-2018-12-26/</link>
      <pubDate>Wed, 26 Dec 2018 10:23:40 -0800</pubDate>
      <guid>https://words.yuvi.in/post/devlog-2018-12-26/</guid>
      <description>&lt;h2 id=&#34;physical-activity&#34;&gt;Physical activity&lt;/h2&gt;&#xA;&lt;p&gt;I walked for about 6 miles yesterday evening, after doing 3-4 miles each day for about 2-3 days before. The roads were empty, and it was lovely. I&amp;rsquo;ve listened to maybe 6-10 hours of &lt;a href=&#34;https://en.wikipedia.org/wiki/Deborah_Frances-White&#34;&gt;Deborah Frances-White&lt;/a&gt; in the last week or so, split between &lt;a href=&#34;http://guiltyfeminist.com/&#34;&gt;The Guilty Feminist&lt;/a&gt; and &lt;a href=&#34;http://globalpillage.net/&#34;&gt;Global Pillage&lt;/a&gt;. Next time though, I&amp;rsquo;m going to try listen to podcasts less &amp;amp; observe my surroundings more. I am doing this (plus PT) to rehab my knee mostly. I slept for 12h yesterday night :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Devlog 2018 12 24</title>
      <link>https://words.yuvi.in/post/devlog-2018-12-24/</link>
      <pubDate>Mon, 24 Dec 2018 10:51:57 -0800</pubDate>
      <guid>https://words.yuvi.in/post/devlog-2018-12-24/</guid>
      <description>&lt;h2 id=&#34;gracefully-exiting-asyncio-application&#34;&gt;Gracefully exiting asyncio application&lt;/h2&gt;&#xA;&lt;p&gt;Continuing yesterday&amp;rsquo;s work on my &lt;a href=&#34;https://github.com/yuvipanda/simpervisor&#34;&gt;simple supervisor library&lt;/a&gt;,&#xA;I continued trying to propagate signals cleanly to child processes&#xA;before exiting. I remembered that it isn&amp;rsquo;t enough to just propagate&#xA;signals - you also have to actually reap them. This meant waiting&#xA;for &lt;code&gt;wait&lt;/code&gt; calls on them to return.&lt;/p&gt;&#xA;&lt;p&gt;I had a task running concurrently that is waiting on these&#xA;processes. So &amp;lsquo;all&amp;rsquo; I had to do was make sure the application&#xA;does &lt;em&gt;not&lt;/em&gt; exit until these tasks are done. This turned&#xA;out to be harder than I thought! After a bunch of reading, I&#xA;recognized that what I needed to do was make sure I wait&#xA;for all pending tasks before actually exiting the application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevLog 2018 December 23</title>
      <link>https://words.yuvi.in/post/devlog-2018-12-23/</link>
      <pubDate>Sun, 23 Dec 2018 19:44:53 -0800</pubDate>
      <guid>https://words.yuvi.in/post/devlog-2018-12-23/</guid>
      <description>&lt;p&gt;I have enjoyed keeping running logs of my coding work (devlogs)&#xA;in the past, and am going to start doing those again now.&lt;/p&gt;&#xA;&lt;p&gt;This &amp;lsquo;holiday&amp;rsquo; season, I am spending time teaching myself&#xA;skills I sortof know about but do not have a deep understanding of.&lt;/p&gt;&#xA;&lt;h2 id=&#34;jupyterlab-extension&#34;&gt;JupyterLab extension&lt;/h2&gt;&#xA;&lt;p&gt;I spent the first part of the day (before I started devlogging)&#xA;working on finishing up a &lt;a href=&#34;https://github.com/yuvipanda/jupyterlab-nbmetadata&#34;&gt;jupyterlab extension&lt;/a&gt;&#xA;I started the day before. It lets you &lt;a href=&#34;https://github.com/jupyterlab/jupyterlab/issues/1308&#34;&gt;edit notebook metadata&lt;/a&gt;.&#xA;I got started since I wanted to use &lt;a href=&#34;https://github.com/mwouts/jupytext&#34;&gt;Jupytext&lt;/a&gt;&#xA;for my work on publishing &lt;a href=&#34;https://github.com/yuvipanda/mybinder.org-analytics&#34;&gt;mybinder.org-analytics&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Freedoms for Open Source Software users in the Cloud</title>
      <link>https://words.yuvi.in/post/oss-in-the-cloud/</link>
      <pubDate>Wed, 15 Aug 2018 22:41:17 -0600</pubDate>
      <guid>https://words.yuvi.in/post/oss-in-the-cloud/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is from conversations with &lt;a href=&#34;http://matthewrocklin.com/&#34;&gt;Matt&#xA;Rocklin&lt;/a&gt; and others at the&#xA;&lt;a href=&#34;http://pangeo.io/&#34;&gt;PANGEO&lt;/a&gt; developer meeting at&#xA;&lt;a href=&#34;https://ncar.ucar.edu/&#34;&gt;NCAR&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Today, almost all of &amp;rsquo;the cloud&amp;rsquo; is run by&#xA;ruthlessly competitive hypercapitalist large scale&#xA;organizations. This is great &amp;amp; terrible.&lt;/p&gt;&#xA;&lt;p&gt;When writing open source applications that primarily&#xA;run on the cloud, I try to make sure my users (primarily&#xA;people deploying my software for &lt;em&gt;their&lt;/em&gt; users) have&#xA;the following freedoms:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;They can run the software on any cloud provider they&#xA;choose to&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;They can run the software on a bunch of computers they&#xA;physically own, with the help of other open source software&#xA;only&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Ensuring these freedoms for my users requires the following&#xA;restrictions on me:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Aug 2018 Work Plan</title>
      <link>https://words.yuvi.in/post/aug-2018-plan/</link>
      <pubDate>Sat, 21 Jul 2018 18:32:53 -0700</pubDate>
      <guid>https://words.yuvi.in/post/aug-2018-plan/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m writing up monthly &amp;lsquo;work plans&amp;rsquo; to plan what work I&amp;rsquo;m trying to do every&#xA;month, and do a retrospective after to see how much I got done. I work across&#xA;a variety of open source projects with ambiguous responsibilities, so work&#xA;planning isn&amp;rsquo;t very set. This has proven to be somewhat quite stressful for&#xA;everyone involved. Let&amp;rsquo;s see if this helps!&lt;/p&gt;&#xA;&lt;h2 id=&#34;jupytercon&#34;&gt;JupyterCon&lt;/h2&gt;&#xA;&lt;p&gt;JupyterCon is in NYC towards the end of August, and it is going to set the pace&#xA;for a bunch of stuff. I have 2.5-ish talks to give. Need to prepare for those and&#xA;do a good job.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conda Constructor Thoughts</title>
      <link>https://words.yuvi.in/post/conda-constructor-thoughts/</link>
      <pubDate>Thu, 28 Jun 2018 22:43:56 -0700</pubDate>
      <guid>https://words.yuvi.in/post/conda-constructor-thoughts/</guid>
      <description>&lt;p&gt;Inspired by conversations with &lt;a href=&#34;https://github.com/bollwyvl&#34;&gt;Nick Bollweg&lt;/a&gt; and&#xA;&lt;a href=&#34;http://matthewrocklin.com/&#34;&gt;Matt Rocklin&lt;/a&gt;, I experimented with using&#xA;&lt;a href=&#34;https://github.com/conda/constructor&#34;&gt;conda constructor&lt;/a&gt; as the installer for&#xA;&lt;a href=&#34;http://words.yuvi.in/post/the-littlest-jupyterhub/&#34;&gt;The Littlest JupyterHub&lt;/a&gt;.&#xA;Theoretically, it fit the bill perfectly - I wanted a way to ship arbitrary&#xA;packages in multiple languages (python &amp;amp; node) in an easy to install self-contained way,&#xA;didn&amp;rsquo;t want to make debian packages &amp;amp; wanted to use a tool that people in the Jupyter&#xA;ecosystem were familiar with. Constructor seemed to provide just that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubectl verbose logging tricks</title>
      <link>https://words.yuvi.in/post/kubectl-rbac/</link>
      <pubDate>Thu, 11 Jan 2018 15:15:58 -0800</pubDate>
      <guid>https://words.yuvi.in/post/kubectl-rbac/</guid>
      <description>&lt;p&gt;Recently I had to write some code that had to call the kubernetes API directly,&#xA;without any language wrappers. While there is pretty good &lt;a href=&#34;https://kubernetes.io/docs/reference/&#34;&gt;reference docs&lt;/a&gt;,&#xA;I didn&amp;rsquo;t want to go and construct all the JSON manually in my programming language.&lt;/p&gt;&#xA;&lt;p&gt;I discovered that &lt;code&gt;kubectl&lt;/code&gt;&amp;rsquo;s &lt;code&gt;-v&lt;/code&gt; parameter is very useful for this! With this,&#xA;I can do the following:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Perform the actions I need to perform with just &lt;code&gt;kubectl&lt;/code&gt; commands&lt;/li&gt;&#xA;&lt;li&gt;Pass &lt;code&gt;-v=8&lt;/code&gt; to kubectl when doing this, and this will print all the HTTP traffic&#xA;(requests and responses!) in an easy to read way&lt;/li&gt;&#xA;&lt;li&gt;Copy paste the JSON requests and template them as needed!&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;This was very useful! The fact you can see the response bodies is also nice,&#xA;since it gives you a good intuition of how to handle this in your own code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Side Project: UA Emoji Firefox Extension</title>
      <link>https://words.yuvi.in/side-project-ua-emoji-firefox-extension/</link>
      <pubDate>Mon, 28 Mar 2016 05:29:05 +0000</pubDate>
      <guid>https://words.yuvi.in/side-project-ua-emoji-firefox-extension/</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: I’m trying to spend time explicitly writing random side projects that are not related to what I’m actively working on as my main project in some form.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;A random thread started by &lt;a href=&#34;https://twitter.com/quominus&#34;&gt;Ironholds&lt;/a&gt; on a random mailing list I was wearily catching up on contained a joke from &lt;a href=&#34;https://twitter.com/bearloga&#34;&gt;bearloga&lt;/a&gt; about malformed User Agents. This prompted me to write &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/uauliver/?src=search&#34;&gt;UAuliver&lt;/a&gt; (&lt;a href=&#34;https://github.com/yuvipanda/uauliver-firefox-extension&#34;&gt;source&lt;/a&gt;), a Firefox extension that randomizes your user agent to be a random string of emoji. This breaks a surprisingly large number of software, I’m told! (GMail &amp;amp; Gerrit being the ones I explicitly remember)&lt;/p&gt;</description>
    </item>
    <item>
      <title>DNS servers, localhost and asynchronous code</title>
      <link>https://words.yuvi.in/dns-servers-localhost-asynchronous-code/</link>
      <pubDate>Thu, 04 Feb 2016 02:38:03 +0000</pubDate>
      <guid>https://words.yuvi.in/dns-servers-localhost-asynchronous-code/</guid>
      <description>&lt;p&gt;&lt;code&gt;localhost&lt;/code&gt; is always &lt;code&gt;127.0.0.1&lt;/code&gt;, right? Nope, can also be &lt;code&gt;::1&lt;/code&gt; if your system only has IPV6 (apparently).&lt;/p&gt;&#xA;&lt;p&gt;Asking a DNS server for an A record for &lt;code&gt;localhost&lt;/code&gt; should give you back &lt;code&gt;127.0.0.1&lt;/code&gt; right? Nope – it varies wildly! &lt;code&gt;8.8.8.8&lt;/code&gt; gives me an &lt;code&gt;NXDOMAIN&lt;/code&gt; which means it tells you straight up THIS DOMAIN DOES NOT EXIST! Which is true, since localhost isn’t a domain. But if you ask the same thing of any dnsmasq server, it’ll tell you localhost is 127.0.0.1. Other servers vary wildly – I found one that returned an &lt;code&gt;NXDOMAIN&lt;/code&gt; for AAAA but 127.0.0.1 for A (which is pretty wild, since &lt;code&gt;NXDOMAIN&lt;/code&gt; makes most software treat the domain as not existing and not attempt other lookups). So localhost and DNS servers don’t mix very well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simple python packaging for Debian / Ubuntu</title>
      <link>https://words.yuvi.in/simple-python-packaging-debian-ubuntu/</link>
      <pubDate>Tue, 19 Aug 2014 13:08:28 +0000</pubDate>
      <guid>https://words.yuvi.in/simple-python-packaging-debian-ubuntu/</guid>
      <description>&lt;p&gt;(As requested by &lt;a href=&#34;https://twitter.com/JeanFred&#34;&gt;Jean-Fred&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;One of the ‘pain points’ with working on deploying python stuff at Wikimedia is that &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;virtualenvs&lt;/code&gt; are banned on production, for some (what I now understand as) good reasons (the solid Signing / Security issues with PYPI, and the slightly less solid but nonetheless valid ‘If we use pip for python and gem for ruby and npm for node, EXPLOSION OF PACKAGE MANAGERS and makes things harder to manage’). I was whining about how hard debian packaging was for quite a while without checking how easy/hard it was to package python specifically, and when I finally did, it turned out to be quite not that hard.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paying for IRCCloud</title>
      <link>https://words.yuvi.in/paying-irccloud/</link>
      <pubDate>Mon, 18 Aug 2014 12:58:45 +0000</pubDate>
      <guid>https://words.yuvi.in/paying-irccloud/</guid>
      <description>&lt;p&gt;I’ve started paying for &lt;a href=&#34;https://irccloud.com&#34;&gt;IRCCloud&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;It is the first ‘service’ I am paying for as a subscriber, I think. I’ve considered doing that for a long time, but ‘paying for IRC’ just felt… odd. I’ve been using &lt;a href=&#34;http://wiki.znc.in/ZNC&#34;&gt;ZNC&lt;/a&gt; + &lt;a href=&#34;http://limechat.net/mac/&#34;&gt;LimeChat&lt;/a&gt;. It’s decent, but sucks on Mobile. Keeping a socket open all the time on a phone just kills the battery, plus the UX on most Android clients sucks.&lt;/p&gt;&#xA;&lt;p&gt;So after seeing &lt;a href=&#34;http://samsmith.io/&#34;&gt;Sam Smith&lt;/a&gt; use IRCCloud during Wikimania, I made the plunge and paid for IRCCloud. It is still connecting to my bouncer, so I have logs under my control. It also has a very usable Android client, and syncs ‘read’ status across devices, and is quite fast.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Write once, attempt to debug everywhere”</title>
      <link>https://words.yuvi.in/write-once-debug-everywhere/</link>
      <pubDate>Sun, 15 Dec 2013 02:20:31 +0000</pubDate>
      <guid>https://words.yuvi.in/write-once-debug-everywhere/</guid>
      <description>&lt;p&gt;“Write once, attempt to debug everywhere” is probably way more accurate than “Write once, run anywhere” – at least for GUI apps. There’s something rather special about ideas that are theoretically amazingly wonderful yet end up being a major pain in the butt when you try to put them in practice, isn’t it?&lt;/p&gt;&#xA;&lt;p&gt;The older &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.wikipedia&#34;&gt;Wikipedia App&lt;/a&gt; happened to be in &lt;a href=&#34;http://phonegap.com/&#34;&gt;PhoneGap&lt;/a&gt;, and I consider it one of my biggest blunders to not have torn it down on day 0 and rewritten it in something saner. I once started writing a blog post for the &lt;a href=&#34;https://blog.wikimedia.org&#34;&gt;Wikimedia Blog&lt;/a&gt; about why we switched from PhoneGap to native apps, but it was killed for having too much profanity in it :) Someday, perhaps.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wikipedia Apps reboot taking shape nicely</title>
      <link>https://words.yuvi.in/wikipedia-apps-reboot-taking-shape-nicely/</link>
      <pubDate>Sat, 14 Dec 2013 15:06:28 +0000</pubDate>
      <guid>https://words.yuvi.in/wikipedia-apps-reboot-taking-shape-nicely/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://yuvi.in/blog/wp-content/uploads/2013/12/wpid-Screenshot_2013-12-14-20-33-57.png&#34;&gt;&lt;img title=&#34;Screenshot_2013-12-14-20-33-57.png&#34; class=&#34;alignnone size-full&#34; alt=&#34;image&#34; src=&#34;http://yuvi.in/blog/wp-content/uploads/2013/12/wpid-Screenshot_2013-12-14-20-33-57.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Prettier, faster and more feature packed! Native Wikipedia app for Android coming real soon!&lt;/p&gt;</description>
    </item>
    <item>
      <title>PHP being insane, part 5832</title>
      <link>https://words.yuvi.in/php-insane-part-5832/</link>
      <pubDate>Fri, 13 Dec 2013 17:58:15 +0000</pubDate>
      <guid>https://words.yuvi.in/php-insane-part-5832/</guid>
      <description>&lt;p&gt;Somehow: &lt;code&gt;( $a &amp;amp;&amp;amp; $b ) || ( $b &amp;amp;&amp;amp; $c ) || ( $a &amp;amp;&amp;amp; $c )&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Became: &lt;code&gt;$a ? ( $b || $c ) : ( $b &amp;amp;&amp;amp; $c )&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Became: &lt;code&gt;count( array_filter( array( $a, $b, $c ) ) ) &amp;gt;= 2&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Became: &lt;code&gt;&amp;quot;$a$b$c&amp;quot; &amp;gt; 1&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;God dammit PHP…&lt;/p&gt;&#xA;&lt;p&gt;(from discussion among me, ^d, ori-l, bd808 and anomie on &lt;code&gt;#mediawiki-core&lt;/code&gt; about how to represent ‘if at least 2 of three conditions are true’)&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevLog for Sun, Aug 25, 2013</title>
      <link>https://words.yuvi.in/devlog-for-sun-aug-25-2013/</link>
      <pubDate>Sun, 25 Aug 2013 23:44:25 +0000</pubDate>
      <guid>https://words.yuvi.in/devlog-for-sun-aug-25-2013/</guid>
      <description>&lt;p&gt;DevLogs have been something I&amp;rsquo;ve not been writing much of of late. Time to fix that!&lt;/p&gt;&#xA;&lt;h2 id=&#34;wlm-android-app&#34;&gt;WLM Android App&lt;/h2&gt;&#xA;&lt;p&gt;Spent some time &lt;a href=&#34;http://lists.wikimedia.org/pipermail/wikilovesmonuments/2013-August/006249.html&#34;&gt;reviving the WLM Android App&lt;/a&gt;. Wasn&amp;rsquo;t too hard, and am surprised at how well it still runs :) Some work still needed to update the &lt;a href=&#34;https://github.com/wikimedia/WLMMobile/commit/113d9abf7b675b147ece3f2be005ef1b6ba0e4cf#assets/www/js/campaigns-data.js&#34;&gt;templates&lt;/a&gt; and other metadata to refer to WLM2013 rather than WLM2012 – but that should not be too hard. The fact that it is an issue at all is simply because I ripped out all the Campaign related APIs a few weeks ago with my UploadCampaign rewrite.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Die ’80 cols or die!’ guidelines!</title>
      <link>https://words.yuvi.in/die-80-cols-or-die-guidelines/</link>
      <pubDate>Thu, 01 Aug 2013 16:51:09 +0000</pubDate>
      <guid>https://words.yuvi.in/die-80-cols-or-die-guidelines/</guid>
      <description>&lt;p&gt;Python&amp;rsquo;s &lt;a href=&#34;http://www.python.org/dev/peps/pep-0008/&#34;&gt;PEP8&lt;/a&gt; has just been &lt;a href=&#34;http://hg.python.org/peps/rev/fb24c80e9afb&#34;&gt;changed&lt;/a&gt; to no longer recommend sticking to 79 columns! The new text says:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Aim to limit all lines to a maximum of 79 characters, but up to 99 characters is acceptable when it improves readability.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;It would be nice to not have any such set limits at all, and just depend on programmers not being insane, but this is still an improvement!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sprinkling some Douchebaginess in code</title>
      <link>https://words.yuvi.in/sprinkling-some-douchebaginess-in-code/</link>
      <pubDate>Tue, 30 Jul 2013 08:49:24 +0000</pubDate>
      <guid>https://words.yuvi.in/sprinkling-some-douchebaginess-in-code/</guid>
      <description>&lt;p&gt;After being frustrated at Java&amp;rsquo;s lack of a generic &amp;lsquo;callback&amp;rsquo; type, I created this interface:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    public interface ContributionUploadProgress {&#xD;&#xA;        void onUploadStarted(Contribution contribution);&#xD;&#xA;        boolean isJavaAPieceOfShit();&#xD;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;And randomly throw around (with &lt;code&gt;onComplete&lt;/code&gt; implementing &lt;code&gt;ContributionUploadProgress&lt;/code&gt;)&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    assert onComplete.isJavaAPieceOfShit();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This, of course, is trivial to fix with an IDE. Should be more fun with a dynamic language :)&lt;/p&gt;&#xA;&lt;p&gt;(And yes, I removed that code before committing)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nitpicking about the Order of Cards</title>
      <link>https://words.yuvi.in/nitpicking-about-the-order-of-cards/</link>
      <pubDate>Mon, 29 Jul 2013 01:18:42 +0000</pubDate>
      <guid>https://words.yuvi.in/nitpicking-about-the-order-of-cards/</guid>
      <description>&lt;p&gt;Someone pointed out &lt;a href=&#34;https://gerrit.wikimedia.org/r/#/c/76342/4/wmf-config/InitialiseSettings.php&#34;&gt;this&lt;/a&gt; happening on Gerrit…&lt;/p&gt;</description>
    </item>
    <item>
      <title>Game of Life in APL</title>
      <link>https://words.yuvi.in/game-of-life-in-apl/</link>
      <pubDate>Thu, 25 Jul 2013 10:52:05 +0000</pubDate>
      <guid>https://words.yuvi.in/game-of-life-in-apl/</guid>
      <description>&lt;p&gt;Ran across a video explaining &lt;a href=&#34;https://www.youtube.com/watch?v=a9xAKttWgP4&#34;&gt;building Game of Life in APL&lt;/a&gt;. Pretty awesome, and surprisingly – quite understandable too!&lt;/p&gt;&#xA;&lt;p&gt;I should learn &lt;a href=&#34;http://www.jsoftware.com/&#34;&gt;J&lt;/a&gt; at some point, I think. My problem with trying to learn such languages is that I find it hard to find something to build that&amp;rsquo;s not a mere academic exercise, and I still do not have a solution as such. Just &amp;rsquo;try harder&amp;rsquo; doesn&amp;rsquo;t really work. Perhaps invent some sort of wonderful number crunching idea and then implement it?&lt;/p&gt;</description>
    </item>
    <item>
      <title>First major feature to Commons deployed</title>
      <link>https://words.yuvi.in/first-major-feature-to-commons-deployed/</link>
      <pubDate>Tue, 23 Jul 2013 00:40:26 +0000</pubDate>
      <guid>https://words.yuvi.in/first-major-feature-to-commons-deployed/</guid>
      <description>&lt;p&gt;My &lt;a href=&#34;https://mediawiki.org/wiki/User:Yuvipanda/Campaigns_namespace_proposal&#34;&gt;UploadWizard work&lt;/a&gt; has just been deployed to &lt;a href=&#34;https://commons.wikimedia.org&#34;&gt;Wikimedia Commons&lt;/a&gt; and my name is listed in the on site &lt;a href=&#34;https://commons.wikimedia.org/wiki/Special:Version&#34;&gt;credits&lt;/a&gt;. Special thanks to &lt;a href=&#34;http://marktraceur.info/&#34;&gt;Mark Traceur&lt;/a&gt; for code review!&lt;/p&gt;&#xA;&lt;p&gt;This feels very, &lt;em&gt;very&lt;/em&gt; nice :) Now to sneak more code into other extensions…&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bikeshedding on Gerrit #1</title>
      <link>https://words.yuvi.in/bikeshedding-on-gerrit-1/</link>
      <pubDate>Mon, 22 Jul 2013 14:00:17 +0000</pubDate>
      <guid>https://words.yuvi.in/bikeshedding-on-gerrit-1/</guid>
      <description>&lt;p&gt;First there was &lt;a href=&#34;https://gerrit.wikimedia.org/r/#/c/74079/&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I was bored, and so there was &lt;a href=&#34;https://gerrit.wikimedia.org/r/#/c/75056/&#34;&gt;this&lt;/a&gt;. That of course, brought a swift end to the bikeshed. I&amp;rsquo;m only &lt;em&gt;slightly&lt;/em&gt; ashamed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Attempting to Secure Redis in a Multi Tenant environment</title>
      <link>https://words.yuvi.in/attempting-to-secure-redis-in-a-multi-tenant-environment/</link>
      <pubDate>Sat, 20 Jul 2013 23:48:43 +0000</pubDate>
      <guid>https://words.yuvi.in/attempting-to-secure-redis-in-a-multi-tenant-environment/</guid>
      <description>&lt;p&gt;When running &lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt; in a shared cluster/hosting environment (such as &lt;a href=&#34;https://wikitech.wikimedia.org/wiki/Nova_Resource:Tools/Help&#34;&gt;Wikimedia Tool Labs&lt;/a&gt;, on which I&amp;rsquo;ve been having fun doing a lot of work on), you would want to try to provide at least &lt;em&gt;some&lt;/em&gt; guarantee of isolation for your keys from everyone else&amp;rsquo;s keys. Since Redis doesn&amp;rsquo;t do ACLs, this is problematic.&lt;/p&gt;&#xA;&lt;p&gt;This can be solved in a couple of ways&lt;/p&gt;&#xA;&lt;h2 id=&#34;run-a-redis-instance-for-each-user&#34;&gt;Run a Redis instance for each user&lt;/h2&gt;&#xA;&lt;p&gt;This is simple enough to do – each user runs their own Redis instance, and has full access to it. Security is handled by setting a secret password, and running &lt;code&gt;redis-server&lt;/code&gt; as the user in question. Boom, secure!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Autosuggest for Tamil in Android Keyboard</title>
      <link>https://words.yuvi.in/autosuggest-tamil-android-keyboard/</link>
      <pubDate>Sun, 21 Apr 2013 21:35:32 +0000</pubDate>
      <guid>https://words.yuvi.in/autosuggest-tamil-android-keyboard/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&#xA;  &lt;a href=&#34;http://yuvi.in/blog/wp-content/uploads/2013/04/2013-04-22-02.57.36.png&#34;&gt;&lt;img class=&#34;aligncenter  wp-image-575&#34; alt=&#34;Screenshot of Tamil autocomplete&#34; src=&#34;http://yuvi.in/blog/wp-content/uploads/2013/04/2013-04-22-02.57.36-580x1031.png&#34; width=&#34;348&#34; height=&#34;619&#34; srcset=&#34;http://yuvi.in/blog/wp-content/uploads/2013/04/2013-04-22-02.57.36-580x1031.png 580w, http://yuvi.in/blog/wp-content/uploads/2013/04/2013-04-22-02.57.36-508x904.png 508w, http://yuvi.in/blog/wp-content/uploads/2013/04/2013-04-22-02.57.36.png 720w&#34; sizes=&#34;(max-width: 348px) 100vw, 348px&#34; /&gt;&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Screenshot of Autosuggest working in Tamil on &lt;a href=&#34;http://github.com/wikimedia/aosp-morelangs-ime&#34;&gt;my variant&lt;/a&gt; of the Android keyboard. I’ve been working on this on and off for the last few months (this is also my final year project in college). I’ve ported all of the &lt;a href=&#34;https://github.com/wikimedia/jquery.ime&#34;&gt;jQuery.IME&lt;/a&gt; languages to work on the keyboard natively.&lt;/p&gt;&#xA;&lt;p&gt;Now experimenting with Autosuggest. It only needs an appropriate dictionary now and we’ll be good to go. Currently I’m getting Autosuggest working only on Tamil, but the plan is to get it to work for all Indian languages. The method I am using (convert everything back to latin chars, then do autocorrect / autosuggest) means it should be trivial to extend to any transliteration based input method.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bugs RESOLVED HUMOROUS</title>
      <link>https://words.yuvi.in/bugs-resolved-humorous/</link>
      <pubDate>Sun, 07 Apr 2013 14:49:24 +0000</pubDate>
      <guid>https://words.yuvi.in/bugs-resolved-humorous/</guid>
      <description>&lt;p&gt;Mediawiki has a &lt;a href=&#34;https://bugzilla.wikimedia.org/showdependencytree.cgi?id=29079&amp;amp;hide_resolved=0&#34;&gt;number of humorous bug reports&lt;/a&gt;, though not as many as I’d like. Still, they’re quite funny.&lt;/p&gt;&#xA;&lt;p&gt;I think my favorites are the &lt;a href=&#34;https://bugzilla.wikimedia.org/show_bug.cgi?id=42595&#34;&gt;request for RESOLVED MURDERED&lt;/a&gt;, the &lt;a href=&#34;https://bugzilla.wikimedia.org/show_bug.cgi?id=30561#c1&#34;&gt;real reason why MediaWiki runs on MySQL&lt;/a&gt;, someone asking &lt;a href=&#34;https://bugzilla.wikimedia.org/show_bug.cgi?id=23223#c53&#34;&gt;where the community consensus is&lt;/a&gt; to stop Volcanoes exploding, &lt;a href=&#34;https://bugzilla.wikimedia.org/show_bug.cgi?id=23223#c66&#34;&gt;offers of shamanic help&lt;/a&gt;, a &lt;a href=&#34;https://bugzilla.wikimedia.org/show_bug.cgi?id=25236&#34;&gt;ground breaking report&lt;/a&gt; on US Government corruption, and a warning about &lt;a href=&#34;https://bugzilla.wikimedia.org/show_bug.cgi?id=23029#c2&#34;&gt;zoning laws required for shipping Ponies&lt;/a&gt;,&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tor Flashproxies on your browser</title>
      <link>https://words.yuvi.in/tor-flashproxies-browser/</link>
      <pubDate>Mon, 25 Mar 2013 14:34:57 +0000</pubDate>
      <guid>https://words.yuvi.in/tor-flashproxies-browser/</guid>
      <description>&lt;p&gt;Tor is one of those things that you don’t really need at all until you really really need it. I don’t need it right now, but I still try to help it as much as possible. One of the easiest way to do so is to run a &lt;a href=&#34;https://crypto.stanford.edu/flashproxy&#34;&gt;flashproxy&lt;/a&gt; (has nothing to do with Adobe!) on your browser – super simple to setup, and effective for people looking for &lt;a href=&#34;https://www.torproject.org/docs/bridges&#34;&gt;bridges&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The easiest way to use it if you’re a Chrome user is to use the &lt;a href=&#34;https://chrome.google.com/webstore/detail/cupcake/dajjbehmbnbppjkcnpdkaniapgdppdnc&#34;&gt;CupCake&lt;/a&gt; extension (the initial colorscheme is a bit… geocities-y, but I’ve sent in &lt;a href=&#34;https://github.com/glamrock/cupcake/pull/1&#34;&gt;a patch&lt;/a&gt; to fix that). You can also add &lt;a href=&#34;https://gitweb.torproject.org/flashproxy.git/blob/HEAD:/modules/mediawiki/custom.js&#34;&gt;this snippet&lt;/a&gt; to your Mediawiki wiki either as a userscript or gadget. If you’re running a site, you can simply use &lt;a href=&#34;https://crypto.stanford.edu/flashproxy/#badge-howto&#34;&gt;the snippet on the flashproxy site&lt;/a&gt; to have it run for all your visitors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mediawiki Bugzilla quips, aka ‘Behind the Scenes (sortof)’</title>
      <link>https://words.yuvi.in/mediawiki-bugzilla-quips-aka-behind-scenes-sortof/</link>
      <pubDate>Fri, 22 Mar 2013 22:37:00 +0000</pubDate>
      <guid>https://words.yuvi.in/mediawiki-bugzilla-quips-aka-behind-scenes-sortof/</guid>
      <description>&lt;p&gt;You might have heard of &lt;a href=&#34;http://bash.org&#34;&gt;bash.org&lt;/a&gt;. If not, do go there! (And I am sorry about your afternoon)&lt;/p&gt;&#xA;&lt;p&gt;Mediawiki maintains something similar, but much shorter in size &amp;amp; form, at &lt;a href=&#34;https://bugzilla.wikimedia.org/quips.cgi?action=show&#34;&gt;Bugzilla quips&lt;/a&gt;. I already appear a few times, but will try to appear some more!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android RegEx bug: ‘null’ replacement with Matcher.replaceAll</title>
      <link>https://words.yuvi.in/android-regex-bug-null-replacement-matcher-replaceall/</link>
      <pubDate>Fri, 22 Mar 2013 22:18:21 +0000</pubDate>
      <guid>https://words.yuvi.in/android-regex-bug-null-replacement-matcher-replaceall/</guid>
      <description>&lt;p&gt;Android’s &lt;a href=&#34;https://developer.android.com/reference/java/util/regex/Pattern.html&#34;&gt;Regular Expressions&lt;/a&gt; engine is API compatible with the generic Java implementation, but under the hood uses &lt;a href=&#34;http://userguide.icu-project.org/strings/regexp&#34;&gt;ICU’s RegEx engine&lt;/a&gt;. This usually causes no problems, until it does and then you’re sortof fucked, but not really.&lt;/p&gt;&#xA;&lt;p&gt;On a recent project, a subtle bug in Android’s &lt;code&gt;Matcher.replaceAll&lt;/code&gt; behavior bit me. When replacing values of captured groups (&lt;code&gt;&#39;$1&#39;&amp;lt;/code,&amp;lt;code&amp;gt;&#39;$2&#39;&lt;/code&gt;, etc), Android’s implementation replaced a reference to an empty group with the literal string &lt;code&gt;&#39;null&#39;&lt;/code&gt; instead of just skipping it (aka replacing with empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;), which is what most other Java implemetations do. The string &lt;code&gt;&#39;null&#39;&lt;/code&gt; is, I think, &lt;em&gt;never&lt;/em&gt; the right behavior. And the inconsistency causes unit tests to pass when run on the desktop JRE to fail when run in Android, which is a major pain.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Worse is Worse</title>
      <link>https://words.yuvi.in/worse-worse/</link>
      <pubDate>Sun, 27 Jan 2013 16:59:06 +0000</pubDate>
      <guid>https://words.yuvi.in/worse-worse/</guid>
      <description>&lt;p&gt;Richard Gabriel’s &lt;a href=&#34;http://www.jwz.org/doc/worse-is-better.html&#34;&gt;Worse is Better&lt;/a&gt; (falsly attributed to &lt;a href=&#34;http://www.jwz.org&#34;&gt;jwz&lt;/a&gt; by many), is a piece on how LISP lost out to C, despite being ‘better’.&lt;/p&gt;&#xA;&lt;p&gt;Jim Waldo’s &lt;a href=&#34;http://www.artima.com/weblogs/viewpost.jsp?thread=24807&#34;&gt;Worse is Worse&lt;/a&gt; notes, quite accurately, that what us geeks consider ‘better’ might not what is, in the context of the universe at large, ‘better’. To quote,&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[…] what we see is that better is a complicated notion, and can depend on a variety of different metrics. It may be disappointing to find out that what we geeks think of as better may not be what our customers think is better. But finding this out shouldn’t surprise us too much.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Happiness #1</title>
      <link>https://words.yuvi.in/happiness-1/</link>
      <pubDate>Wed, 31 Oct 2012 19:36:33 +0000</pubDate>
      <guid>https://words.yuvi.in/happiness-1/</guid>
      <description>&lt;p&gt;Happiness is fixing a bug with no obvious cause with a one liner and pushing it out to five million people with wonderful support from a team sitting halfway across the world :-)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Staying on the bleeding Edge</title>
      <link>https://words.yuvi.in/blogging-raspberry-pi/</link>
      <pubDate>Thu, 18 Oct 2012 14:58:39 +0000</pubDate>
      <guid>https://words.yuvi.in/blogging-raspberry-pi/</guid>
      <description>&lt;p&gt;I’m blogging from (one of the many) browsers on this Raspberry Pi. Testing setting it up to do slideshows during &lt;a href=&#34;http://jsfoo.in&#34;&gt;JSFoo 2012&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;THIS IS SO COOL!&lt;/p&gt;&#xA;&lt;p&gt;I am now editing this blog post from my new Nexus 7.&lt;/p&gt;&#xA;&lt;p&gt;THIS IS SO COOL!&lt;/p&gt;&#xA;&lt;p&gt;I am a few years behind the curve on this. Last year was spent slogging my ass out at a wonderful startup and travelling to a lot of places meeting and working with some wonderful people. Left very little time for staying on the bleeding edge.&lt;/p&gt;</description>
    </item>
    <item>
      <title>House painters of Programming</title>
      <link>https://words.yuvi.in/house-painters-programming/</link>
      <pubDate>Fri, 05 Oct 2012 07:05:45 +0000</pubDate>
      <guid>https://words.yuvi.in/house-painters-programming/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;We’re the Michelangelos of the great age of machine intelligence which is yet to come. We’re sketching out how it’s all going to look. We’re at the forefront of solving incredible problems and creating magical devices. – &lt;a href=&#34;https://news.ycombinator.com/item?id=4611688&#34;&gt;DanielBMarkham&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;If there’s a great age of machine intelligence to come, then one in a million of us may be a Michelangelo. The rest of us are house-painters, and the houses we paint are slated for demolition within our own lifetimes. – &lt;a href=&#34;https://news.ycombinator.com/item?id=4612184&#34;&gt;Lagged2Death&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>My .vimrc</title>
      <link>https://words.yuvi.in/my-vimrc/</link>
      <pubDate>Thu, 08 Mar 2012 12:45:06 +0000</pubDate>
      <guid>https://words.yuvi.in/my-vimrc/</guid>
      <description>&lt;p&gt;I’ve gotten rid of my Vim repo from GitHub, and switched to using &lt;a href=&#34;https://github.com/gmarik/vundle&#34;&gt;Vundle&lt;/a&gt; + DropBox to keep my vim environment safely backed up.&lt;/p&gt;&#xA;&lt;p&gt;You can find my &lt;a href=&#34;http://dl.dropbox.com/u/8768784/vimrc&#34;&gt;.vimrc&lt;/a&gt; file here. With just this and Vundle setup, I find it much easier to port my settings elsewhere instead of using git.&lt;/p&gt;&#xA;&lt;p&gt;Hat tip to &lt;a href=&#34;http://www.arunmozhi.in/&#34;&gt;tecoholic&lt;/a&gt; for pushing me to switch to Vundle :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Passing Headers along while Proxying with nginx</title>
      <link>https://words.yuvi.in/passing-headers-proxying-nginx/</link>
      <pubDate>Mon, 20 Feb 2012 20:23:35 +0000</pubDate>
      <guid>https://words.yuvi.in/passing-headers-proxying-nginx/</guid>
      <description>&lt;p&gt;When you’re proxying requests via nginx, you might assume after reading [the documentation][1] that every header is forwarded, except for the Host and Connection headers.&lt;/p&gt;&#xA;&lt;p&gt;You’d also be wrong.&lt;/p&gt;&#xA;&lt;p&gt;nginx &lt;strong&gt;drops&lt;/strong&gt; all headers with an underscore in them.&lt;/p&gt;&#xA;&lt;p&gt;This is a configurable settings. You can turn it on with a simple&lt;/p&gt;&#xA;&lt;pre&gt;underscores_in_headers on&lt;/pre&gt;&#xA;&lt;p&gt;I’m still baffled as to *why* this is [a configuration parameter][2]. And why it is turned off by default. And why there is no mention of it in the proxy docs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My First Program</title>
      <link>https://words.yuvi.in/program/</link>
      <pubDate>Sat, 07 Jan 2012 21:39:13 +0000</pubDate>
      <guid>https://words.yuvi.in/program/</guid>
      <description>&lt;p&gt;Note: These are almost a decade old. Reproduced as close to memory as possible&lt;/p&gt;&#xA;&lt;p&gt;My first memories of programming aren’t actually C. They were GW-BASIC, and later on, LOGO. I don’t remember any of my BASIC – but I do remember the look on my computer science teacher’s face in 5th grade when I managed to draw a flower with LOGO when everyone else was doing rectangles and lines. I vividly remember it – you draw an arc for a certain length, then stop, draw another arc in the reverse direction for the same length – and you have a petal. Then you just offset your next arc by a few degrees, repeat the previous thing, and you have another petal. Do this a few times such that &lt;code&gt;offset-degreese * count = 360&lt;/code&gt; and you have a flower. That I could just modify the variables &lt;code&gt;length&lt;/code&gt; and &lt;code&gt;offset-degree&lt;/code&gt; to draw flowers as big, and with as many petals as you want – it blew my mind. This was in 5th grade – and I immediately started pestering my parents to put me in a programming language class outside (I had already gone to classes for &lt;em&gt;cough_MS Office_cough&lt;/em&gt; and DOS back then). And the SSI nearby happened to be teaching a reasonably cheap &lt;code&gt;Unix/C/C++&lt;/code&gt; class.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What I learnt from reading “Javascript – The Good Parts”</title>
      <link>https://words.yuvi.in/learnt-reading-javascript-good-parts/</link>
      <pubDate>Mon, 28 Nov 2011 10:40:50 +0000</pubDate>
      <guid>https://words.yuvi.in/learnt-reading-javascript-good-parts/</guid>
      <description>&lt;p&gt;Just finished reading ‘Javascript – The Good Parts’. Here is what I learnt:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I knew jack shit about JavaScript. I was able to get along so far simply because I knew jQuery and understood how closures work.&lt;/li&gt;&#xA;&lt;li&gt;Holy shit that’s one fucked up language. Quite schizophrenic, saved by almost limitless extensibility/monkey-patchability/watcha-gonna-do-write-a-java-applet-hahaha .&lt;/li&gt;&#xA;&lt;li&gt;If you’re going to write Javascript, you’ll have to subset. Subsetting/augmenting has its own share of problems – primarily that &lt;code&gt;map&lt;/code&gt; in your code might not be the same as &lt;code&gt;map&lt;/code&gt; in someone else’s code, even if they seem to be working on the same ‘type’&lt;/li&gt;&#xA;&lt;li&gt;jQuery is incredible. I guess it is sort of like a ‘Standard Library’ of sorts, atleast on the client side. I’m sure there exists something similar on the server side as well (underscore.js, perhaps?)&lt;/li&gt;&#xA;&lt;li&gt;I haven’t written any sufficiently large Javascript program yet. Need to fix that.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;defensive-programming&#34;&gt;Defensive Programming&lt;/h3&gt;&#xA;&lt;p&gt;When you’re writing PHP, you program &lt;em&gt;defensively&lt;/em&gt;. The language is out to get you. Make one wrong step and it’ll fuck you over. Never assume anything, make sure you always check the documentation. You can’t trust the language. It’s not stupid, it’s schizophrenic.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Vim setup</title>
      <link>https://words.yuvi.in/my-vim-setup/</link>
      <pubDate>Tue, 23 Aug 2011 22:55:03 +0000</pubDate>
      <guid>https://words.yuvi.in/my-vim-setup/</guid>
      <description>&lt;p&gt;I &lt;a href=&#34;http://yuvi.in/blog/moving-to-vim-from-emacs.html&#34;&gt;moved&lt;/a&gt; from emacs to vim a while ago, and have been steadily accumulating a series of plugins in my &lt;code&gt;.vim&lt;/code&gt;. They’re all up in my rather messy &lt;a href=&#34;http://github.com/yuvipanda/dotfiles&#34;&gt;dotfiles repo&lt;/a&gt;. Here’s a slightly more neatly organized list of the plugins I currently use:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3025&#34;&gt;command-t&lt;/a&gt; – File opener and buffer switcher. In-fuckin-credibly useful.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1953&#34;&gt;vimpress&lt;/a&gt; – What I use to blog since &lt;a href=&#34;http://yuvi.in/blog/moving-back-to-wordpress/&#34;&gt;moving to wordpress&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=39&#34;&gt;matchit&lt;/a&gt; – Lets &lt;code&gt;%&lt;/code&gt; work with html tags&lt;/li&gt;&#xA;&lt;li&gt;&lt;s&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3695&#34;&gt;commentary&lt;/a&gt; – Generic commenting and uncommenting script&lt;/s&gt; &lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1218&#34;&gt;NERDCommenter&lt;/a&gt; has replaced commentary due to being more flexible and having more options.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2975&#34;&gt;fugitive&lt;/a&gt; – Incredibly awesome git wrapper for vim. I rarely go to the commandline for git these days&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3465&#34;&gt;tagbar&lt;/a&gt; – Useful code-exploratory plugin when I’m looking around a codebase trying to familiarize myself.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1643&#34;&gt;supertab&lt;/a&gt; – Buffer completion in insert mode only when I need it.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2423&#34;&gt;gist&lt;/a&gt; – Put stuff up in gist to pass it around&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=559&#34;&gt;BufClose&lt;/a&gt; – So I can close a buffer without messing up my splits&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3509&#34;&gt;extradite&lt;/a&gt; – &lt;code&gt;:Glog&lt;/code&gt; replacement that builds on top of fugitive. I don’t understand why this isn’t bundled with fugitive&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2204&#34;&gt;TwitVim&lt;/a&gt; – Yes, so I don’t have to go to the browser (and be consumed by chat/reddit/hn) just to post a tweet.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2572&#34;&gt;ack.vim&lt;/a&gt; – Ack integration for vim. Do yourself a favor and use &lt;a href=&#34;http://betterthangrep.com&#34;&gt;ack&lt;/a&gt; instead of grep.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2736&#34;&gt;Syntastic&lt;/a&gt; – Automatic syntax checking so that I don’t miss a semicolon and not know about it&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1355&#34;&gt;php-doc&lt;/a&gt; – Insert boilerplate PHP doc compatible strings in my PHP files whenever I want to. Very PHP specific, need to find something that works across languages. (Note: This plugin has quite some identity crisis. It’s named PDV but it’s filename is php-doc. Since php-doc is more descriptive, I’m using that)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2754&#34;&gt;delimitMate&lt;/a&gt; – Automatically closes quotes, parens, braces, etc for you. I initially thought this would be super annoying, but in fact it is rather very pleasant.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;s&gt;I’m also on the default &lt;code&gt;desert&lt;/code&gt; color theme – haven’t found anything better. Suggestions welcome – both for the color scheme and for new/replacement plugins.&lt;/s&gt; After trying out &lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1778&#34;&gt;wombat&lt;/a&gt; and &lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2555&#34;&gt;jellybeans&lt;/a&gt; color schemes, I have settled on wombat for now.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Non-ASCII Characters in HTTP Headers</title>
      <link>https://words.yuvi.in/non-ascii-characters-http-headers/</link>
      <pubDate>Sat, 13 Aug 2011 00:56:10 +0000</pubDate>
      <guid>https://words.yuvi.in/non-ascii-characters-http-headers/</guid>
      <description>&lt;p&gt;I was debugging an issue &lt;a href=&#34;http://interviewstreet.com&#34;&gt;at work&lt;/a&gt; today where a (generated) file refused to download in Chrome, but the same URL worked just fine with wget. I remember reading in the &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec2.html#sec2.2&#34;&gt;HTTP Spec&lt;/a&gt; that HTTP headers can only be lower ASCII, so when wget mangled the output file’s name, the problem was obvious – the file name contained a character that wasn’t in lower ASCII (an accented A). Chrome had borked on encountering it, while wget soldiered on. Using &lt;code&gt;iconv&lt;/code&gt; to strip non-ASCII characters in the file name on the server side fixed the issue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>You are a programmer if you can run code in your head</title>
      <link>https://words.yuvi.in/programmer-run-code-head/</link>
      <pubDate>Thu, 11 Aug 2011 04:09:23 +0000</pubDate>
      <guid>https://words.yuvi.in/programmer-run-code-head/</guid>
      <description>&lt;p&gt;From &lt;a href=&#34;http://news.ycombinator.com/item?id=2870176&#34;&gt;HN&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;From my experience, the largest hurdle first time programmers have is being able to execute programs in their head. &lt;strong&gt;&lt;em&gt;It takes a cognitive leap to go from the source code in front of them, and what happens at runtime&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;(emphasis mine)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;I believe that if you have made that &lt;em&gt;cognitive leap&lt;/em&gt;, you can call yourself a programmer. It means you’ve entered into the &lt;a href=&#34;http://www.codinghorror.com/blog/2006/07/separating-programming-sheep-from-non-programming-goats.html&#34;&gt;second hump&lt;/a&gt; – you are a programmer. One of us. Welcome :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>SleepSort from 4Chan</title>
      <link>https://words.yuvi.in/sleepsort-4chan/</link>
      <pubDate>Sun, 19 Jun 2011 01:40:36 +0000</pubDate>
      <guid>https://words.yuvi.in/sleepsort-4chan/</guid>
      <description>&lt;p&gt;4Chan isn’t exactly what you’d associate with ‘shit, that’s a cool piece of code!’, but look &lt;a href=&#34;http://dis.4chan.org/read/prog/1295544154&#34;&gt;what I found&lt;/a&gt;!&lt;/p&gt;&#xA;&lt;p&gt;(&lt;a href=&#34;http://news.ycombinator.com/item?id=2657277&#34;&gt;via HN&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;Nice hack. And it &lt;strong&gt;is&lt;/strong&gt; &lt;code&gt;O(N)&lt;/code&gt; in bitsize of largest number (Ignoring all the overhead of forking new processes, the problem with the race conditions(Sort 0 and 0.1? How about 0.01 and 0.011?), processor contention, etc,.) They basically delegated the sorting to the process scheduler, treating it as a sort of priority queue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SICP and BrainFuck</title>
      <link>https://words.yuvi.in/sicp-and-brainfuck/</link>
      <pubDate>Fri, 13 May 2011 05:10:31 +0000</pubDate>
      <guid>https://words.yuvi.in/sicp-and-brainfuck/</guid>
      <description>&lt;p&gt;No, I’m &lt;em&gt;not&lt;/em&gt; going to blow your mind by telling you I’m going to do the SICP exercises in BrainFuck :)&lt;/p&gt;&#xA;&lt;p&gt;I just wrote &lt;a href=&#34;https://gist.github.com/969657&#34;&gt;my first brainfuck program&lt;/a&gt;. Might as well be my last, but not sure. Tape-based turing-ish programing seems fun, so maybe I’ll try that again with something more expressive than brainfuck (or maybe that is pointless?)&lt;/p&gt;&#xA;&lt;p&gt;And I’m doing the SICP Exercises. In &lt;a href=&#34;http://groups.csail.mit.edu/mac/projects/scheme/&#34;&gt;MIT-Scheme&lt;/a&gt;. I’ve put them &lt;a href=&#34;https://github.com/yuvipanda/sicp-exercises&#34;&gt;up on GitHub&lt;/a&gt;. I’m doing this with the &lt;a href=&#34;http://fpug-c.posterous.com/&#34;&gt;FPUG-C&lt;/a&gt; SICP Study Group, so hope I’m able to complete it all this time :) Big props to &lt;a href=&#34;http://www.openbala.com/&#34;&gt;Balaji&lt;/a&gt; for organizing it, and letting us get away with the free coke and coffee!&lt;/p&gt;</description>
    </item>
    <item>
      <title>GStreamer 101 at GNOME Asia 2011</title>
      <link>https://words.yuvi.in/gstreamer-101-at-gnome-asia-2011/</link>
      <pubDate>Sun, 10 Apr 2011 23:02:48 +0000</pubDate>
      <guid>https://words.yuvi.in/gstreamer-101-at-gnome-asia-2011/</guid>
      <description>&lt;p&gt;My &lt;code&gt;GStreamer 101&lt;/code&gt; presentation at &lt;a href=&#34;http://gnome.asia&#34;&gt;GNOME.asia&lt;/a&gt; was &lt;em&gt;very&lt;/em&gt; wel received. I was quite happy with the way it turned out. Thanks to &lt;a href=&#34;http://arunraghavan.net/&#34;&gt;Ford_Prefect&lt;/a&gt; and &lt;a href=&#34;http://abharath.wordpress.com/&#34;&gt;Bharath Acharya&lt;/a&gt; for pulling me in :)&lt;/p&gt;&#xA;&lt;p&gt;My very minimal slides are &lt;a href=&#34;http://www.slideshare.net/yuvipanda/gstreamer-101&#34;&gt;here&lt;/a&gt;. You can reuse them if you want to.&lt;/p&gt;&#xA;&lt;p&gt;Sadly, missed the week long hackfest :( Next time!&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevLog: Jan 2011</title>
      <link>https://words.yuvi.in/devlog-jan-2011/</link>
      <pubDate>Tue, 01 Feb 2011 12:37:06 +0000</pubDate>
      <guid>https://words.yuvi.in/devlog-jan-2011/</guid>
      <description>&lt;p&gt;&lt;em&gt;I’ve started keeping devlogs, recording everyday ‘productive’ activity I do everyday. Publicly shaming myself into doing something productive every day. Just records for this month, next month on should provide time spent as well. There’s an entry for every day when I’ve touched a computer. I’ll be continuously refining this format, so feedback welcome&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Links: &lt;a href=&#34;http://32hourstartup.com&#34;&gt;32HourStartup&lt;/a&gt;, &lt;a href=&#34;http://wiki.busroutes.in&#34;&gt;Busroutes.in Wiki&lt;/a&gt;, &lt;a href=&#34;http://github.com/yuvipanda/PiTiVi&#34;&gt;PiTiVi&lt;/a&gt;, &lt;a href=&#34;http://geekweekend.in&#34;&gt;Geekweekend&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;27-jan&#34;&gt;27 Jan&lt;/h3&gt;&#xA;&lt;p&gt;More of nothing productive. 32HourStartup is eating into my dev time.&lt;/p&gt;&#xA;&lt;h3 id=&#34;26-jan&#34;&gt;26 Jan&lt;/h3&gt;&#xA;&lt;p&gt;Nothing productive. Ugh. 32hourstartup website.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Functional Programming Geekweekend at Thoughtworks</title>
      <link>https://words.yuvi.in/functional-programming-geekweekend-at-thoughtworks/</link>
      <pubDate>Tue, 25 Jan 2011 18:51:26 +0000</pubDate>
      <guid>https://words.yuvi.in/functional-programming-geekweekend-at-thoughtworks/</guid>
      <description>&lt;p&gt;&lt;em&gt;[Note: I’ve a rather large backlog of blog posts to do, will push them out as soon as I can]&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Saturday (22 Jan 2011) was spent at &lt;a href=&#34;http://www.geekweekend.in/index.html&#34;&gt;Geekweekend&lt;/a&gt;, organized at &lt;a href=&#34;http://www.thoughtworks.com/other-offices&#34;&gt;Thougtworks Chennai&lt;/a&gt;. The event had awesomeness written all over it, even before it started – how can &lt;em&gt;any&lt;/em&gt; event where you register through a (rather limited, but still) command line interface on a website be not good? :D&lt;/p&gt;&#xA;&lt;p&gt;I was late as usual (damn living so far away from everywhere) – and found my way walking through the underbelly of the Kathipara junction thanks to &lt;a href=&#34;http://maps.google.co.in&#34;&gt;Google Maps’ Walking Directions&lt;/a&gt; :P&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enthusiastic Teachers and Naive Implementation of Gauss Seidel Approximations</title>
      <link>https://words.yuvi.in/enthusiastic-teachers-and-naive-implementation-of-gauss-seidel-approximations/</link>
      <pubDate>Sat, 25 Dec 2010 11:50:04 +0000</pubDate>
      <guid>https://words.yuvi.in/enthusiastic-teachers-and-naive-implementation-of-gauss-seidel-approximations/</guid>
      <description>&lt;p&gt;This semester, one of our so called &lt;em&gt;electives&lt;/em&gt; (despite the fact that we have no real choice in them) is Numerical Methods. I don’t quite like the actual way the subject is taught – mind numbing, error prone calculations with a calculator. However, the methods are pretty awesome.&lt;/p&gt;&#xA;&lt;p&gt;The staff explained &lt;a href=&#34;https://gist.github.com/753872&#34;&gt;Gauss Seidel&lt;/a&gt; yesterday, and it seemed a straightforward recursive solution to me. So in the break, I cooked up a small python &lt;a href=&#34;http://en.wikipedia.org/wiki/Gauss%E2%80%93Seidel_method&#34;&gt;script&lt;/a&gt; that gave me all the intermediate answers as well – so for any &lt;em&gt;assignments&lt;/em&gt; I could just run them through this and copy it to paper.&lt;/p&gt;</description>
    </item>
    <item>
      <title>More Effects for Cheese!</title>
      <link>https://words.yuvi.in/more-effects-for-cheese/</link>
      <pubDate>Tue, 07 Dec 2010 02:42:49 +0000</pubDate>
      <guid>https://words.yuvi.in/more-effects-for-cheese/</guid>
      <description>&lt;p&gt;Watch two rather handsome&lt;a href=&#34;http://www.dgsiegel.net/&#34;&gt;1&lt;/a&gt; dudes (&lt;a href=&#34;http://www.dgsiegel.net/&#34;&gt;daniel&lt;/a&gt; and &lt;a href=&#34;http://www.andreasn.se/blog/&#34;&gt;andreas&lt;/a&gt;) in &lt;a href=&#34;http://www.dgsiegel.net/files/new_cheese_effects.ogv&#34;&gt;this screencast&lt;/a&gt; where they show off some more effects (thanks to &lt;a href=&#34;http://blogs.gnome.org/fargiolas/&#34;&gt;fargiolas&lt;/a&gt;!). Newer effects are easier to add (feels awesome that that was &lt;a href=&#34;http://yuvi.in/blog/the-end-of-gsoc-2010.html&#34;&gt;my work&lt;/a&gt;) – and more will be on their way :)&lt;/p&gt;&#xA;&lt;p&gt;footnote: &lt;a href=&#34;http://www.dgsiegel.net/&#34;&gt;1&lt;/a&gt;: Professional opinion from one of my lady friends :P&lt;/p&gt;</description>
    </item>
    <item>
      <title>Moving to Vim from Emacs</title>
      <link>https://words.yuvi.in/moving-to-vim-from-emacs/</link>
      <pubDate>Tue, 07 Dec 2010 01:14:21 +0000</pubDate>
      <guid>https://words.yuvi.in/moving-to-vim-from-emacs/</guid>
      <description>&lt;p&gt;I moved to Vim from Emacs a while back. I realized I was not using emacs to its fullest extent – I was using it as ‘just a text editor’, and alt-tabbing to &lt;code&gt;gnome-terminal&lt;/code&gt; for most of my work. I was using one tool per job anyway, so why not go all the way and use a &lt;a href=&#34;http://www.vim.org/&#34;&gt;text editor&lt;/a&gt; for a text editor instead of &lt;a href=&#34;http://www.gnu.org/software/emacs/&#34;&gt;yet another operating system&lt;/a&gt; :P&lt;/p&gt;&#xA;&lt;p&gt;Also, and perhaps more importantly – on my rather small &lt;a href=&#34;http://yuvi.in/blog/samsung-n210-review.html&#34;&gt;Netbook&lt;/a&gt;, pressing combos felt awkward to me (I know it shouldn’t have, but it did). Much better (atleast so far) with vim than Emacs. Since most of my coding these days seems to be done on this small and underpowered machine, and my wrists were hurting anyway, I switched.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to increase Cheese’s Burst Mode Photo Count</title>
      <link>https://words.yuvi.in/how-to-increase-cheeses-burst-mode-photo-count/</link>
      <pubDate>Sun, 07 Nov 2010 14:50:51 +0000</pubDate>
      <guid>https://words.yuvi.in/how-to-increase-cheeses-burst-mode-photo-count/</guid>
      <description>&lt;p&gt;“Why does Cheese have a maximum photo count of 100 in burst mode?” questions have popped up quite a few times on the cheese list. It is just a teeny, tiny bug – fixed in master.&lt;/p&gt;&#xA;&lt;p&gt;The work around is simple:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Till Cheese 2.32&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Raise it to whatever value you want in &lt;code&gt;line 8&lt;/code&gt; of &lt;code&gt;/usr/share/cheese/cheese-prefs.ui&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;(If you don’t know what version you are running, check &lt;code&gt;Help -&amp;gt; About&lt;/code&gt;)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;(Fix is just raising the limit from 100 to something that most people will likely not hit. If they do hit it – well, &lt;code&gt;line 40 on /usr/share/cheese/cheese-prefs.ui&lt;/code&gt; :D)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why I moved off Arch (on my Netbook)</title>
      <link>https://words.yuvi.in/why-i-moved-off-arch-on-my-netbook/</link>
      <pubDate>Mon, 01 Nov 2010 17:24:25 +0000</pubDate>
      <guid>https://words.yuvi.in/why-i-moved-off-arch-on-my-netbook/</guid>
      <description>&lt;p&gt;I posted a while back that I &lt;a href=&#34;http://yuvi.in/blog/running-archlinux.html&#34;&gt;moved&lt;/a&gt; to Arch (from Ubuntu) on my Netbook. That was almost two months back. My Arch experiment, sadly, didn’t work out for long. I moved back to Ubuntu within a couple of week’s time. Why?&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Lack of binary packages. I had to build quite a few packages from source because there were no binary packages available. The tilting point was when I figured there were no binary packges for mit-scheme! Ofcourse, I could’ve just used AUR and built them from source, but…&lt;/li&gt;&#xA;&lt;li&gt;Building from source on my Netbook sucks. ATOM + Slow Hard Drive -&amp;gt; I’m nuts waiting for stuff to compile. The AUR is basically useless to me.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Hello Ubuntu! (I also hate Unity ‘coz it takes up precious screen space – might move to something else soon)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running ArchLinux</title>
      <link>https://words.yuvi.in/running-archlinux/</link>
      <pubDate>Mon, 06 Sep 2010 22:58:20 +0000</pubDate>
      <guid>https://words.yuvi.in/running-archlinux/</guid>
      <description>&lt;p&gt;I’m blogging from Arch Linux :D&lt;/p&gt;&#xA;&lt;p&gt;I’ve been meaning to setup Arch on &lt;a href=&#34;http://yuvi.in/blog/samsung-n210-review.html&#34;&gt;my netbook&lt;/a&gt; for a while, after hearing a lot of people rave about how awesome &lt;code&gt;pacman&lt;/code&gt; is and how fast their system is. I didn’t want to spend time on moving to a new distro during my GSoC, so I kept putting it off. Yesterday Ubuntu borked on my netbook for some weird reason (I suspect it was my friend Rathna sitting on it, but might have been because I was thinking of moving to Vim too) – and I took the opportunity to install Arch. After some messing around, and some help from #archlinux, I was able to get myself a commandline that also connected to the Internet via wifi. Yay!&lt;/p&gt;</description>
    </item>
    <item>
      <title>The End of GSoC 2010</title>
      <link>https://words.yuvi.in/the-end-of-gsoc-2010/</link>
      <pubDate>Thu, 02 Sep 2010 23:42:20 +0000</pubDate>
      <guid>https://words.yuvi.in/the-end-of-gsoc-2010/</guid>
      <description>&lt;p&gt;Google Summer of Code ended a while back. Me (and most on #gsoc) agreed on one thing – WHERE DID THOSE 3 MONTHS GO? Amazing time it was – thanks to &lt;a href=&#34;http://www.dgsiegel.net/&#34;&gt;_ke&lt;/a&gt; (Who is frolicking somewhere in Thailand right now), &lt;a href=&#34;http://blogs.gnome.org/fargiolas/&#34;&gt;fargiolas&lt;/a&gt; and the rest of the GNOME guys (#clutter, #gstreamer and #gtk+ yay!) for making it awesome. #hackers-india was a great venting place too :)&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://projects.gnome.org/cheese/&#34;&gt;Cheese&lt;/a&gt;‘s &lt;a href=&#34;http://git.gnome.org/browse/cheese&#34;&gt;master&lt;/a&gt; needs quite a bit of work before it can be included in &lt;a href=&#34;http://live.gnome.org/ThreePointZero&#34;&gt;GNOME 3.0&lt;/a&gt; – and I plan on doing most of that. It’s fun – demoing it at college is a huge hit. Looks like eventually, my &lt;a href=&#34;http://yuvi.in/blog/gsoc-2010-proposal.html&#34;&gt;original goal&lt;/a&gt; for Cheese might be met ;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cheese 2.31.1 Released</title>
      <link>https://words.yuvi.in/cheese-2-31-1-released/</link>
      <pubDate>Thu, 22 Jul 2010 19:57:53 +0000</pubDate>
      <guid>https://words.yuvi.in/cheese-2-31-1-released/</guid>
      <description>&lt;p&gt;If you had read my &lt;a href=&#34;http://yuvi.in/blog/gsoc-2010-proposal.html&#34;&gt;Cheese GSoC proposal&lt;/a&gt;, it would’ve stressed on one major point – make Cheese sexy.&lt;/p&gt;&#xA;&lt;p&gt;Two days ago, one of my classmates spent 5 minutes on the bus using Cheese and trying out different effects (and poses!). Today, my brother spent 20 minutes trying to get the perfect combination of style and vagueness for his Facebook profile picture – using Cheese. He then asked me to create an account for him in Ubuntu (he was an exclusively Win7 user till then) before leaving.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Room Full of People Like Me”</title>
      <link>https://words.yuvi.in/room-full-of-people-like-me/</link>
      <pubDate>Thu, 22 Jul 2010 03:02:02 +0000</pubDate>
      <guid>https://words.yuvi.in/room-full-of-people-like-me/</guid>
      <description>&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;    &lt;span class=&#34;s&#34;&gt;&#34;I can&amp;#39;t tell you how wonderful it was - I walked into this room, and it was full of people like me&#34;&lt;/span&gt;&#xA;                &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;I would give an arm, a leg, an eye and other assorted body parts if I could find such a room. And live there.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://blog.senthil.me/hackerspace-talk-presentation-for-barcampchen&#34;&gt;Hackerpace Chennai&lt;/a&gt; or &lt;a href=&#34;http://www.thestartupcentre.in/&#34;&gt;The Startup Center&lt;/a&gt; better turn up fast :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>My GSoC 2010 Proposal</title>
      <link>https://words.yuvi.in/my-gsoc-2010-proposal/</link>
      <pubDate>Thu, 22 Jul 2010 02:45:06 +0000</pubDate>
      <guid>https://words.yuvi.in/my-gsoc-2010-proposal/</guid>
      <description>&lt;p&gt;I used &lt;a href=&#34;http://gist.github.com&#34;&gt;gist&lt;/a&gt; to publish &lt;a href=&#34;http://gist.github.com/356202&#34;&gt;my GSoC proposal&lt;/a&gt;. Diffs, easy to show off, and Markdown support – made gist perfect for me to make modifications and get feedback easily.&lt;/p&gt;&#xA;&lt;p&gt;It is the first ‘real’ document I’ve written – it actually had a tangible effect.&lt;/p&gt;&#xA;&lt;p&gt;Now that I don’t need to make any modifications, I’ve &lt;a href=&#34;http://yuvi.in/blog/gsoc-2010-proposal.html&#34;&gt;moved it to my site&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cheese GSoC Report – Week 8</title>
      <link>https://words.yuvi.in/cheese-gsoc-report-week-8/</link>
      <pubDate>Thu, 22 Jul 2010 00:37:31 +0000</pubDate>
      <guid>https://words.yuvi.in/cheese-gsoc-report-week-8/</guid>
      <description>&lt;p&gt;This week on Cheese….&lt;/p&gt;&#xA;&lt;p&gt;WE MADE A RELEASE! :)&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://ftp.gnome.org/pub/GNOME/sources/cheese/2.31/&#34;&gt;http://ftp.gnome.org/pub/GNOME/sources/cheese/2.31/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cheese 2.31.1 is out. It’s a dev release. Does not have zarro boogs.&lt;/p&gt;&#xA;&lt;p&gt;But it is a release!&lt;/p&gt;&#xA;&lt;p&gt;This week, we&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Fixed several perf bugs.&lt;/li&gt;&#xA;&lt;li&gt;Fixed some weird preferences dialog bugs&lt;/li&gt;&#xA;&lt;li&gt;Filed (and eventually had fixed) a bug in GStreamer.&lt;/li&gt;&#xA;&lt;li&gt;Fixed a regression&lt;/li&gt;&#xA;&lt;li&gt;Beautified the UI a bit (text name overlay of effects, etc)&lt;/li&gt;&#xA;&lt;li&gt;Assorted administrative work to prepare for release (Copyright&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code&gt;updating, merging back into master, etc)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;I also passed my mid terms :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cheese GSoC Report – Week 7</title>
      <link>https://words.yuvi.in/cheese-gsoc-report-week-7/</link>
      <pubDate>Mon, 12 Jul 2010 18:26:54 +0000</pubDate>
      <guid>https://words.yuvi.in/cheese-gsoc-report-week-7/</guid>
      <description>&lt;p&gt;This week on Cheese….&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Performance enhancements. Sacrificed some startup time for &lt;strong&gt;much&lt;/strong&gt; improved usage time. Viewing live effects are now a snap. So is selecting an effect. We went in some cases from ~15s to &amp;lt;1s. Thanks to Tester (and other folks) at #gstreamer for helping out :)&lt;/li&gt;&#xA;&lt;li&gt;Paging of effects. Effects are now in pages of 9 each, instead of a huge scroller area.&lt;/li&gt;&#xA;&lt;li&gt;Applying effects without stopping the pipeline. Makes things much faster.&lt;/li&gt;&#xA;&lt;li&gt;Implementing the popup menu for thumbnails.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;We’ll be making a release anytime now :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reddit University – SICP Reading Group</title>
      <link>https://words.yuvi.in/reddit-university-sicp-reading-group/</link>
      <pubDate>Sat, 03 Jul 2010 17:59:34 +0000</pubDate>
      <guid>https://words.yuvi.in/reddit-university-sicp-reading-group/</guid>
      <description>&lt;p&gt;I’ve joined &lt;a href=&#34;http://universityofreddit.com/v2/&#34;&gt;Reddit University&lt;/a&gt;‘s &lt;a href=&#34;http://universityofreddit.com/v2/class.php?id=57&#34;&gt;SICP Reading Group&lt;/a&gt; class. I’ve wanted to read through &lt;a href=&#34;http://mitpress.mit.edu/sicp/full-text/book/book.html&#34;&gt;SICP&lt;/a&gt; for a long time, and have gotten started many times – never completed it. Maybe the group effects will help me finish this time :)&lt;/p&gt;&#xA;&lt;p&gt;If you’re interested in expanding your horizons beyond mere code-monkey programming, &lt;a href=&#34;http://universityofreddit.com/v2/class.php?id=57&#34;&gt;join up!&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cheese GSoC Report – Week 5</title>
      <link>https://words.yuvi.in/cheese-gsoc-report-week-5/</link>
      <pubDate>Thu, 01 Jul 2010 02:35:58 +0000</pubDate>
      <guid>https://words.yuvi.in/cheese-gsoc-report-week-5/</guid>
      <description>&lt;p&gt;Late report. But I did get quite a bit done!&lt;/p&gt;&#xA;&lt;p&gt;Last week…&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Video Effects file format reader&lt;/li&gt;&#xA;&lt;li&gt;Live Preview of Effects! (YAY!)&lt;/li&gt;&#xA;&lt;li&gt;Effect files added&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Live Preview took most of my time. We bought down CPU usage from ~90% to a more manageable ~50%. Cleaned up code a bit (still needs more cleanup). It is rather very ‘demoable’, provided you gloss over the slowdowns.&lt;/p&gt;&#xA;&lt;p&gt;Coming up next week would be…&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cheese GSoC Report – Week 4</title>
      <link>https://words.yuvi.in/cheese-gsoc-report-week-4/</link>
      <pubDate>Sun, 20 Jun 2010 04:24:14 +0000</pubDate>
      <guid>https://words.yuvi.in/cheese-gsoc-report-week-4/</guid>
      <description>&lt;p&gt;Fourth week of the Summer of Code was over a few days back, and this report is overdue :( I’ve not been able to code as much as I wanted to this week – due to various non-technical issues. Will compensate in the next week.&lt;/p&gt;&#xA;&lt;p&gt;Last week…&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Countdown Animations (Thanks to _ke for cleanup!)&lt;/li&gt;&#xA;&lt;li&gt;GConf Cleanup&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Yes, that was it.&lt;/p&gt;&#xA;&lt;p&gt;Totally failed to meet last week’s goals. Sigh.&lt;/p&gt;&#xA;&lt;p&gt;By next week, I hope to have accomplished…&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cheese GSoC Report – Week 3</title>
      <link>https://words.yuvi.in/cheese-gsoc-report-week-3/</link>
      <pubDate>Sun, 13 Jun 2010 04:24:14 +0000</pubDate>
      <guid>https://words.yuvi.in/cheese-gsoc-report-week-3/</guid>
      <description>&lt;p&gt;Third week of the Summer of Code is over! And during this week….&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Successfully wrapped up the core cheese functionality (&lt;code&gt;libcheese&lt;/code&gt;) with a vala wrapper&lt;/li&gt;&#xA;&lt;li&gt;Made Photo Mode work&lt;/li&gt;&#xA;&lt;li&gt;Made Video Mode work&lt;/li&gt;&#xA;&lt;li&gt;Made Burst Mode work&lt;/li&gt;&#xA;&lt;li&gt;Made cheese single instance using &lt;code&gt;libunique&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Started work on cleaning up GConf code.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;In &lt;a href=&#34;http://yuvi.in/blog/cheese-gsoc-report-week-2.html&#34;&gt;last week’s report&lt;/a&gt;, I mentioned that I didn’t quite like my pace of work. It is still the same (approx. 3 hours a day on average, excluding overhead) – but I’ve come to accept that it is okay. No more bitching about it, as long as I’m meeting my goals.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cheese GSoC Report – Week 2</title>
      <link>https://words.yuvi.in/cheese-gsoc-report-week-2/</link>
      <pubDate>Sun, 06 Jun 2010 04:20:42 +0000</pubDate>
      <guid>https://words.yuvi.in/cheese-gsoc-report-week-2/</guid>
      <description>&lt;p&gt;Second week of the (rather hot and sweaty) Summer of Code is over! And during this week….&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Replicated most of the UI of Cheese&lt;/li&gt;&#xA;&lt;li&gt;Learnt how to make C and Vala code co-exist (Thanks folks at #vala!)&lt;/li&gt;&#xA;&lt;li&gt;Made the thumbnail widget work, in both modes/orientations&lt;/li&gt;&#xA;&lt;li&gt;Implemented fullscreen mode, with autohiding of the action buttons&lt;/li&gt;&#xA;&lt;li&gt;Started modifying parts of libcheese to support clutter for video output&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;In &lt;a href=&#34;http://yuvi.in/blog/cheese-gsoc-report-week-1.html&#34;&gt;last week’s report&lt;/a&gt;, I mentioned that I didn’t quite like my pace of work. I &lt;em&gt;still&lt;/em&gt; don’t like it – &lt;a href=&#34;http://projecthamster.wordpress.com/&#34;&gt;Hamster&lt;/a&gt; reports I’ve spent 15.2 hours since Monday on Cheese, which is just about 3 hours a day! Totally unacceptable, and I’d like to increase that number considerably.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cheese GSoC Report – Week 1</title>
      <link>https://words.yuvi.in/cheese-gsoc-report-week-1/</link>
      <pubDate>Sun, 30 May 2010 02:22:41 +0000</pubDate>
      <guid>https://words.yuvi.in/cheese-gsoc-report-week-1/</guid>
      <description>&lt;p&gt;First week of official coding is over. What do I have to show for it?&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Moved code from Github to GNOME Git (Thanks fargiolas!)&lt;/li&gt;&#xA;&lt;li&gt;Learnt how to use GTKBuilder, and how to autoconnect signals to vala callback functions.&lt;/li&gt;&#xA;&lt;li&gt;Learnt &lt;em&gt;some&lt;/em&gt; of the intricacies of Gtk+ Layouts (They still have a lot to teach me!)&lt;/li&gt;&#xA;&lt;li&gt;Got a very basic version of the basic Cheese window up and running.&lt;/li&gt;&#xA;&lt;li&gt;Learnt how to embed Clutter into the Gtk+ base of Cheese.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;So far so good. I don’t quite like the pace of my work – I should be going faster. Hopefully I won’t be feeling like this at the end of next week :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vala, GTKBuilder and Autoconnecting Signal Handlers</title>
      <link>https://words.yuvi.in/vala-gtkbuilder-and-autoconnecting-signal-handlers/</link>
      <pubDate>Sun, 30 May 2010 02:22:41 +0000</pubDate>
      <guid>https://words.yuvi.in/vala-gtkbuilder-and-autoconnecting-signal-handlers/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I’m not an expert on Vala, GTK+, or anything else for that matter. If I am off base someplace, comment.&lt;/p&gt;&#xA;&lt;p&gt;I spent quite a some time today trying to get GTKBuilder to automagically connect all my signals to their handlers. I tripped up at a few places, and so recording them here for posterity.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;If you are using instance methods (like most of us are), you’ve to decorate your handler function with the attribute &lt;code&gt;[CCode (instance_pos=-1)]&lt;/code&gt;. This makes sure that the function is passed the &lt;code&gt;this&lt;/code&gt; pointer as last argument, rather than first. You’ve to do this because &lt;code&gt;Builder.connect_signals&lt;/code&gt; passes the instance as last parameter (&lt;code&gt;user_data&lt;/code&gt;), and by aligning your &lt;code&gt;this&lt;/code&gt; pointer with &lt;code&gt;user_data&lt;/code&gt;, you make sure the correct instance is called.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GSoC Milestones – Vala Build using AutoTools</title>
      <link>https://words.yuvi.in/gsoc-milestones-vala-build-using-autotools/</link>
      <pubDate>Thu, 06 May 2010 07:00:20 +0000</pubDate>
      <guid>https://words.yuvi.in/gsoc-milestones-vala-build-using-autotools/</guid>
      <description>&lt;p&gt;&lt;em&gt;I’m using a &lt;a href=&#34;http://www.rememberthemilk.com/home/yuvipanda/13485943/&#34;&gt;RTM List&lt;/a&gt; to track my milestones for this &lt;a href=&#34;http://yuvi.in/blog/gsoc-2010-the-beginning.html&#34;&gt;my GSoC&lt;/a&gt; this year. I’ll be making a blog post for each item ticked off that list, to share what I’ve learnt in my journey from n00b to someone whose code is good enough to be included in GNOME. This is part 1 in the series, where I tell you about autotools&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;My GSoC project involves, moving major parts (UI) of Cheese to a new language – &lt;a href=&#34;http://live.gnome.org/Vala&#34;&gt;Vala&lt;/a&gt;. Vala is more an extremely glorious C preprocessor than a language of its own – it just translates down to GObject based C code, rather than bytecode/objectcode. The syntax is very C#ish – I was using &lt;a href=&#34;http://www.emacswiki.org/emacs/CSharpMode&#34;&gt;csharp-mode&lt;/a&gt; in emacs to code vala till I got bored enough to download &lt;a href=&#34;http://live.gnome.org/Vala/Emacs&#34;&gt;vala-mode&lt;/a&gt;. It’s got closures – haven’t used them yet, here is to hoping they’re real closures. It has &lt;em&gt;tons&lt;/em&gt; of libraries – it takes a few (minutes|hours) to write a binding for any C library, so many bindings already exist. You don’t lose speed – Vala is compiled down to C code. It also has one of Java’s suckiest features – &lt;em&gt;Checked Exceptions&lt;/em&gt;. The documentation is non existent – you’ve to pretty much read through the bindings, or the original C library’s documentation to get anything done. And not many people know such a language exists (&lt;a href=&#34;http://kausikram.net/&#34;&gt;Kausik&lt;/a&gt; for example – but he also didn’t know you could output pdf from latex, so I don’t think his opinion counts :D)&lt;/p&gt;</description>
    </item>
    <item>
      <title>GSoC Milestone 0 – What does my project do?</title>
      <link>https://words.yuvi.in/gsoc-milestone-0-what-does-my-project-do/</link>
      <pubDate>Tue, 04 May 2010 00:48:06 +0000</pubDate>
      <guid>https://words.yuvi.in/gsoc-milestone-0-what-does-my-project-do/</guid>
      <description>&lt;p&gt;&lt;em&gt;I’m using a &lt;a href=&#34;http://www.rememberthemilk.com/home/yuvipanda/13485943/&#34;&gt;RTM List&lt;/a&gt; to track my milestones for this &lt;a href=&#34;http://yuvi.in/blog/gsoc-2010-the-beginning.html&#34;&gt;my GSoC&lt;/a&gt; this year. I’ll be making a blog post for each item ticked off that list, to share what I’ve learnt in my journey from n00b to someone whose code is good enough to be included in GNOME. This is part 0 in the series, where I tell you what my project is all about and how &lt;a href=&#34;http://projects.gnome.org/cheese&#34;&gt;Cheese&lt;/a&gt; is going to become awesomer.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>My First Accepted Patch!</title>
      <link>https://words.yuvi.in/my-first-accepted-patch/</link>
      <pubDate>Sat, 01 May 2010 19:04:18 +0000</pubDate>
      <guid>https://words.yuvi.in/my-first-accepted-patch/</guid>
      <description>&lt;p&gt;As part of my &lt;a href=&#34;http://yuvi.in/blog/gsoc-2010-the-beginning.html&#34;&gt;GSoC&lt;/a&gt; preparations, I wrote a few patches for &lt;a href=&#34;http://projects.gnome.org/cheese&#34;&gt;Cheese&lt;/a&gt;. &lt;a href=&#34;http://git.gnome.org/browse/cheese/commit/?id=fba61486adb3fb9e0172e79ffd8beeaef079ab30&#34;&gt;One of them&lt;/a&gt; (a one liner to fix a crash) has made it to &lt;a href=&#34;http://permalink.gmane.org/gmane.comp.gnome.devel.announce/94&#34;&gt;GNOME 2.30.1&lt;/a&gt; – the other two (&lt;a href=&#34;https://bugzilla.gnome.org/show_bug.cgi?id=592081&#34;&gt;1&lt;/a&gt; and &lt;a href=&#34;https://bugzilla.gnome.org/show_bug.cgi?id=597226&#34;&gt;2&lt;/a&gt;) are slightly more significant and involve UI changes, and so will be integrated later.&lt;/p&gt;&#xA;&lt;p&gt;Free beer to everyone who can catch me in a bar! Free Pepsi/Sprite/Egg Puff to anyone who can catch me in the College Stores ;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>GSoC 2010 – The Beginning</title>
      <link>https://words.yuvi.in/gsoc-2010-the-beginning/</link>
      <pubDate>Sat, 01 May 2010 18:53:43 +0000</pubDate>
      <guid>https://words.yuvi.in/gsoc-2010-the-beginning/</guid>
      <description>&lt;p&gt;I mentioned this in passing in my &lt;a href=&#34;http://yuvi.in/blog/hacking-more.html&#34;&gt;earlier post&lt;/a&gt;, and was tweeting about it quite furiously – I’ve been selected to work on &lt;a href=&#34;http://yuvi.in/blog/hacking-more.html&#34;&gt;Cheese&lt;/a&gt; for this year’s &lt;a href=&#34;http://socghop.appspot.com/gsoc/program/list_projects/google/gsoc2010&#34;&gt;Google Summer of Code&lt;/a&gt; :D&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://gist.github.com/356202&#34;&gt;Link to my, uhm, &lt;em&gt;cheesy&lt;/em&gt; proposal&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-now&#34;&gt;What Now?&lt;/h3&gt;&#xA;&lt;p&gt;Getting accepted doesn’t mean shit. Actually finishing whatever I was supposed to within 3 months does mean &lt;em&gt;something&lt;/em&gt; – especially since I’ve taken on quite a bit of stuff to do (Move to new language + 2 new features). I’m quite the n00b – first time I’ll be doing just &lt;em&gt;one&lt;/em&gt; thing over 3 months. Will be setting up a way of monitoring progress (probably via set milestones) soon enough. Will keep this place posted :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hacking more!</title>
      <link>https://words.yuvi.in/hacking-more/</link>
      <pubDate>Wed, 21 Apr 2010 20:08:24 +0000</pubDate>
      <guid>https://words.yuvi.in/hacking-more/</guid>
      <description>&lt;p&gt;Quoting from &lt;a href=&#34;http://en.wikipedia.org/wiki/Steven_Levy&#34;&gt;Steven Levy&lt;/a&gt;‘s &lt;a href=&#34;http://www.gutenberg.org/etext/729&#34;&gt;Hackers&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[..] a project undertaken or a product built not solely to fulfill&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;some constructive goal, but with some wild pleasure taken in mere&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;involvement, was called a “hack.”&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Building things for the fun of building them is hacking. And &lt;a href=&#34;http://db.glug-bom.org/lug-authors/philip/docs/hackers-not-crackers.html&#34;&gt;hacking is not illegally breaking into computers&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I like hacking. I want to be a real hacker. I can’t call myself one yet.&lt;/p&gt;&#xA;&lt;p&gt;I’m putting this up as a reminder to myself – about what is important and what isn’t. Here is to hoping I remember to say &lt;em&gt;No&lt;/em&gt; more often. Here is to hoping that the next time I’m bored, I write something rather than idle on IRC. GSoC (a bigger post about it coming up) is helping – a lot.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dokuwiki plugin to easily embed Gists</title>
      <link>https://words.yuvi.in/dokuwiki-plugin-to-easily-embed-gists/</link>
      <pubDate>Mon, 19 Apr 2010 19:33:03 +0000</pubDate>
      <guid>https://words.yuvi.in/dokuwiki-plugin-to-easily-embed-gists/</guid>
      <description>&lt;p&gt;I &lt;strong&gt;love&lt;/strong&gt; &lt;a href=&#34;http://gist.github.com&#34;&gt;Gist&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I recently started a project that required me to embed gists in &lt;a href=&#34;http://dokuwiki.org&#34;&gt;Dokuwiki&lt;/a&gt;. I hunted around and found no plugins, so &lt;a href=&#34;http://www.dokuwiki.org/doku.php?id=plugin:gist&#34;&gt;created&lt;/a&gt; my own. Needs the superawesome &lt;a href=&#34;http://www.dokuwiki.org/doku.php?id=plugin:command&#34;&gt;command&lt;/a&gt; plugin too. Released under the 3 clause BSD License.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Block cursor vs Post Cursor (gVim vs Emacs)</title>
      <link>https://words.yuvi.in/block-cursor-vs-post-cursor-gvim-vs-emacs/</link>
      <pubDate>Wed, 28 Oct 2009 00:40:41 +0000</pubDate>
      <guid>https://words.yuvi.in/block-cursor-vs-post-cursor-gvim-vs-emacs/</guid>
      <description>&lt;p&gt;Here is an approximate timeline of the &lt;strong&gt;editors&lt;/strong&gt; I’ve used so far:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Turbo C++ (4th grade to 8th grade)&lt;/li&gt;&#xA;&lt;li&gt;Visual Basic 6 (8th grade to 10th grade)&lt;/li&gt;&#xA;&lt;li&gt;Visual Studio 2005 (10th grade to 11th grade)&lt;/li&gt;&#xA;&lt;li&gt;Visual Studio 2008 (11th grade to 1st year of college)&lt;/li&gt;&#xA;&lt;li&gt;gVim (1st year of college)&lt;/li&gt;&#xA;&lt;li&gt;GNU Emacs (after gVim)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Now, the one thing, maybe even the &lt;em&gt;only&lt;/em&gt; thing I miss is the fact that gVim gives me the I-Bar cursor, while Emacs by default gave me the block cursor. I like the I-Bar better than the block, and so far, couldn’t figure out how to change that. It’s not helping that I don’t have access to the internet.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Anatomy of an impromptu hackathon (Git vs SVN)</title>
      <link>https://words.yuvi.in/anatomy-of-an-impromptu-hackathon-git-vs-svn/</link>
      <pubDate>Wed, 21 Oct 2009 12:46:45 +0000</pubDate>
      <guid>https://words.yuvi.in/anatomy-of-an-impromptu-hackathon-git-vs-svn/</guid>
      <description>&lt;p&gt;One of the (good) things that came out of the &lt;a href=&#34;http://yuvi.in/blog/what-i-learnt-from-the-hackfest-at-iitm.html&#34;&gt;IIT Hackfest&lt;/a&gt; was me hanging out on the #hackers-india IRC channel. It is wild, swingy and usually fun. Usually.&lt;/p&gt;&#xA;&lt;p&gt;So yesterday night, &lt;a href=&#34;http://ideamonk.blogspot.com/&#34;&gt;ideamonk&lt;/a&gt; casually mentioned that he was working on something called &lt;a href=&#34;http://github.com/yuvipanda/pymos&#34;&gt;pymos&lt;/a&gt;. It was a python script that made mosiacs. Now that was something I was totally interested in – I tried making a similar ‘script’ a long time back (in C#), and totally utterly failed, simply because I was so caught up with the part that downloaded pictures from flickr that I didn’t do the part that generated the actual Mosaic. Since ideamonk’s code already generated the mosaics (and since it was in Python), I forked it, and began to work on the to do items.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why I got rid of my fork of Waffle</title>
      <link>https://words.yuvi.in/why-i-got-rid-of-my-fork-of-waffle/</link>
      <pubDate>Wed, 21 Oct 2009 00:27:55 +0000</pubDate>
      <guid>https://words.yuvi.in/why-i-got-rid-of-my-fork-of-waffle/</guid>
      <description>&lt;p&gt;For those of you who didn’t know, &lt;a href=&#34;http://github.com/bickfordb/waffle&#34;&gt;Waffle&lt;/a&gt; is a &lt;a href=&#34;http://bret.appspot.com/entry/how-friendfeed-uses-mysql&#34;&gt;schemaless storage layer&lt;/a&gt; that sits on top of SQLAlchemy. Something that I was initially very interested in.&lt;/p&gt;&#xA;&lt;p&gt;Not anymore.&lt;/p&gt;&#xA;&lt;p&gt;Why?&lt;/p&gt;&#xA;&lt;p&gt;Because I found &lt;a href=&#34;http://www.mongodb.org/display/DOCS/Home&#34;&gt;MongoDB&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;And fell in love.&lt;/p&gt;&#xA;&lt;p&gt;Yes, I do know they both are different, but MongoDB has the things that attracted me to Waffle (very flexible schema, great querying, indexes) and is just as easy to set up (maybe not as easy as Waffle over SQLite, but only slightly less easier).&lt;/p&gt;</description>
    </item>
    <item>
      <title>What I learnt from the Hackfest at IITM</title>
      <link>https://words.yuvi.in/what-i-learnt-from-the-hackfest-at-iitm/</link>
      <pubDate>Wed, 07 Oct 2009 23:10:41 +0000</pubDate>
      <guid>https://words.yuvi.in/what-i-learnt-from-the-hackfest-at-iitm/</guid>
      <description>&lt;p&gt;I was about to just type a list of stuff here, but that doesn’t do the topic justice. So here I am, at 3:30 in the morning, sleep cycle screwed up by the Hackfest, typing out a post on what all I learnt from there. I spent pretty much my entire awake-time at the IIT, so it helped me a lot.&lt;/p&gt;&#xA;&lt;h4 id=&#34;your-college-doesn8217t-matter-much&#34;&gt;Your college doesn’t matter much&lt;/h4&gt;&#xA;&lt;p&gt;IIT Envy. Every non-IITian has that. I spent a lot of time at IITM during the Hackfest, and while my IITEnvy did go up during the first few hours, it initially came down well below normal as I got to know the people better. What was cool about them was not &lt;em&gt;where they were studying&lt;/em&gt;, but &lt;em&gt;what they were doing&lt;/em&gt;. I could do what these guys were doing. Anyone can do what these guys were doing – there is nothing special about the IIT except maybe for the fact that it aggregates naturally dedicated people into pools. You don’t need an IIT for that – IRC will do :) I’m from a teeny college that nobody has heard of – that would have been a problem when people judged people by where they studied, rather than by what they did. Should not be a problem for me now :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hackfest ’09 – Expectations</title>
      <link>https://words.yuvi.in/hackfest-09-expectations/</link>
      <pubDate>Thu, 01 Oct 2009 01:27:12 +0000</pubDate>
      <guid>https://words.yuvi.in/hackfest-09-expectations/</guid>
      <description>&lt;p&gt;I’m going to participate in &lt;a href=&#34;http://www.shaastra.org/2009/site/events/coding/hackfest&#34;&gt;Hackfest&lt;/a&gt; at IITM’s Shaastra, starting tomorrow. Will hopefully be a lot of fun – and may I be able to contribute my first ever patch during the event ;) Got permission to not get back home – but wondering, where would I stay? Probably pass out in front of the computers :)&lt;/p&gt;&#xA;&lt;p&gt;I’ll be hackin on GNOME Apps – hopefully &lt;a href=&#34;http://banshee-project.org/&#34;&gt;Banshee&lt;/a&gt; (since that’s one app I &lt;strong&gt;love&lt;/strong&gt;), or write a newish, smallish app with PyGTK. Anything would do but :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code I’ve written so far</title>
      <link>https://words.yuvi.in/code-ive-written-so-far/</link>
      <pubDate>Thu, 01 Oct 2009 00:52:30 +0000</pubDate>
      <guid>https://words.yuvi.in/code-ive-written-so-far/</guid>
      <description>&lt;p&gt;Code I have written so far:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/yuvipanda/HiSlain&#34;&gt;HiSlain&lt;/a&gt;: A static blog publishing system (NOT A DJANGO BLOG!). Runs this blog&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/yuvipanda/wtfimb&#34;&gt;wtfimb&lt;/a&gt;: The code that powers &lt;a href=&#34;http://busroutes.in&#34;&gt;Busroutes.in&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/yuvipanda/frailgrey&#34;&gt;frailgrey&lt;/a&gt;: Markov Chain based page generator (pretty lame, actually)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/yuvipanda/goodfather&#34;&gt;GoodFather&lt;/a&gt;: Collection of utils for web data scraping and storing&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/yuvipanda/reappy&#34;&gt;reappy&lt;/a&gt;: A Twitter Search Application Framework&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/yuvipanda/sadivy&#34;&gt;SadIvy&lt;/a&gt;: A pure WSGI URL Shortener&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Now, I’ve been doing a shit job of documenting them – none exists. Nor of writing tests – none exists. That should hopefully change soon :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>3hours of code &amp; 1 blog post per day</title>
      <link>https://words.yuvi.in/3hours-of-code-1-blog-post-per-day/</link>
      <pubDate>Fri, 28 Aug 2009 00:39:22 +0000</pubDate>
      <guid>https://words.yuvi.in/3hours-of-code-1-blog-post-per-day/</guid>
      <description>&lt;p&gt;Those are my new goals.&lt;/p&gt;&#xA;&lt;p&gt;I’ve got a mechanism to track the code accomplishments (will make that public soon), and maybe I’ll write a widget for HiSlain for the blog post/day accomplishment.&lt;/p&gt;&#xA;&lt;p&gt;I’m liking it so far – 7 hours of code yesterday, along with 2 blog posts. Couldn’t hit my code target today – but am hitting my blog target. I should figure out more ways to make this work better.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AutoKrish: Because we don’t get enough jilpa</title>
      <link>https://words.yuvi.in/autokrish-because-we-dont-get-enough-jilpa/</link>
      <pubDate>Fri, 14 Aug 2009 02:03:12 +0000</pubDate>
      <guid>https://words.yuvi.in/autokrish-because-we-dont-get-enough-jilpa/</guid>
      <description>&lt;p&gt;I dig &lt;a href=&#34;http://krishashok.wordpress.com&#34;&gt;KrishAshok&lt;/a&gt;‘s writing. Been lurking there for a long time.&lt;/p&gt;&#xA;&lt;p&gt;Only problem is, he doesn’t write often. Nor does he &lt;a href=&#34;http://twitter.com/krishashok&#34;&gt;tweet&lt;/a&gt; often.&lt;/p&gt;&#xA;&lt;p&gt;Only solution is, ofcourse, to create a bot that &lt;a href=&#34;http://yuvisense.net/autokrish&#34;&gt;writes like him&lt;/a&gt;, and another bot that &lt;a href=&#34;http://twitter.com/autokrish&#34;&gt;tweets like him&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; Some of my favorites: &lt;a href=&#34;http://yuvisense.net/autokrish/#624&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/autokrish/#60371&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/autokrish/#98437&#34;&gt;3&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/autokrish/#27352&#34;&gt;4&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/autokrish/#66943&#34;&gt;5&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/autokrish/#95354&#34;&gt;6&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/autokrish/#39727&#34;&gt;7&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/autokrish/#11220&#34;&gt;8&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/autokrish/#46690&#34;&gt;9&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/autokrish/#80700&#34;&gt;10&lt;/a&gt;, etc. Too many to list :)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;UPDATE 2:&lt;/strong&gt; &lt;a href=&#34;http://yuvisense.net/autokrish/#38479&#34;&gt;Absolute Ripper&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Automatic Quote Generators (aka AutoPeople)</title>
      <link>https://words.yuvi.in/the-automatic-quote-generators-aka-autopeople/</link>
      <pubDate>Fri, 14 Aug 2009 01:30:59 +0000</pubDate>
      <guid>https://words.yuvi.in/the-automatic-quote-generators-aka-autopeople/</guid>
      <description>&lt;p&gt;An Automatic Quote Generator – generates sound bites that &lt;em&gt;almost&lt;/em&gt; sound like someone else, and are somtimes funny as hell:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://yuvisense.net/autofreya&#34;&gt;AutoFreya&lt;/a&gt;, emulating the &lt;a href=&#34;http://freya.in&#34;&gt;doubtfully-anonymous-teen Freya&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://yuvisense.net/autolg&#34;&gt;AutoLG&lt;/a&gt;, for popular blogger &lt;a href=&#34;http://louisgray.com&#34;&gt;Louis Gray&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://yuvisense.net/automona&#34;&gt;AutoMona&lt;/a&gt;, for, well, I can’t describe who &lt;a href=&#34;http://pixelbits.wordpress.com&#34;&gt;Mona&lt;/a&gt; is yet. I haven’t figured out. Just someone cool, maybe?&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://yuvisense.net/autoatwood&#34;&gt;AutoAtwood&lt;/a&gt;, for one of the few for-the-masses dev coder &lt;a href=&#34;http://codinghorror.com&#34;&gt;Jeff Atwood&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;A few of them (&lt;a href=&#34;http://twitter.com/autolg&#34;&gt;@AutoLG&lt;/a&gt; &amp;amp; &lt;a href=&#34;http://twitter.com/automona&#34;&gt;@AutoMona&lt;/a&gt;) also have twiwtter bots for them, posting short tweets once every seven minutes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Picks from autogenerated Freya Quotes (NSFW?)</title>
      <link>https://words.yuvi.in/picks-from-autogenerated-freya-quotes-nsfw/</link>
      <pubDate>Mon, 20 Jul 2009 23:47:58 +0000</pubDate>
      <guid>https://words.yuvi.in/picks-from-autogenerated-freya-quotes-nsfw/</guid>
      <description>&lt;p&gt;I love autogenerating text.&lt;/p&gt;&#xA;&lt;p&gt;So I ran &lt;a href=&#34;http://www.freya.in/&#34;&gt;Freya’s Blog&lt;/a&gt; through a &lt;a href=&#34;http://en.wikipedia.org/wiki/Markov_chain&#34;&gt;markov chain&lt;/a&gt; text generator, and it came up with a ton of potentially funny quotes that had me in splits for a while. Here are the best:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;They say its gonna kill me&lt;/li&gt;&#xA;&lt;li&gt;But still, his eyes are in no way good.&lt;/li&gt;&#xA;&lt;li&gt;Thank God I never pick it up.&lt;/li&gt;&#xA;&lt;li&gt;But hello, which parent accompanies a full-grown daughter to her lover&lt;/li&gt;&#xA;&lt;li&gt;When you win, nobody knows that she’s thinking of marriage.&lt;/li&gt;&#xA;&lt;li&gt;He’ll persuade me somewhow and then copy-paste this.&lt;/li&gt;&#xA;&lt;li&gt;And I’m blogging with a heavy suitcase full of new clothes (which aren’t really comfortable and I wasn’t flat-chested) but not sweet! Um..well..the dress isn’t bad but I was embarrassed.&lt;/li&gt;&#xA;&lt;li&gt;My Friend deserves better, so finally we’re here in the future.&lt;/li&gt;&#xA;&lt;li&gt;I didn’t want Economics, so they grow, safely and sweetly blossoming. By this time, the camera broke.&lt;/li&gt;&#xA;&lt;li&gt;It broke because, well, he was gorgeous!&lt;/li&gt;&#xA;&lt;li&gt;Considering the fact that I would’ve sat without realising that 59 people registered for the ball, gowns etc. But that’s very few blogs.&lt;/li&gt;&#xA;&lt;li&gt;Her reason ultimately was, you don’t really like the designs. But that’s what women want for being in a relatioship.&lt;/li&gt;&#xA;&lt;li&gt;If a women got molested, then she finally said “Okay, dear, I will have to pay so far and she still lurves him&lt;/li&gt;&#xA;&lt;li&gt;That’s stupid.&lt;/li&gt;&#xA;&lt;li&gt;If anyone has the official cleavage showing license, I don’t. Now, it’s not falling.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;I swear these are all authentic computer produced text, and I think they &lt;em&gt;do&lt;/em&gt; have a ‘freya’ feel to them. Don’t they?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code Highligting Plugin for HiSlain</title>
      <link>https://words.yuvi.in/code-highligting-plugin-for-hislain/</link>
      <pubDate>Fri, 17 Jul 2009 23:44:21 +0000</pubDate>
      <guid>https://words.yuvi.in/code-highligting-plugin-for-hislain/</guid>
      <description>&lt;p&gt;I’ve been hacking ’round with &lt;a href=&#34;http://github.com/yuvipanda/HiSlain&#34;&gt;HiSlain&lt;/a&gt;, and wrote a syntax highlighting plugin for it. Nothing fancy – just uses &lt;a href=&#34;http://pygments.org&#34;&gt;Pygments&lt;/a&gt;, but the process of modifying the plugin architecture to support this has been an awesome ride. I’ll probably open up a new GitHub project just for HiSlain Themes and Plugins.&lt;/p&gt;&#xA;&lt;p&gt;And since I’ve to test out Syntax Highlighting,&lt;/p&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#34;I kinda like Python :)&#34;&lt;/span&gt;&#xA;                &lt;/pre&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Progress on HiSlain #1</title>
      <link>https://words.yuvi.in/progress-on-hislain-1/</link>
      <pubDate>Wed, 15 Jul 2009 23:35:18 +0000</pubDate>
      <guid>https://words.yuvi.in/progress-on-hislain-1/</guid>
      <description>&lt;p&gt;Small status update on &lt;a href=&#34;http://github.com/yuvipanda/HiSlain&#34;&gt;my blogging platform&lt;/a&gt;‘s progress.&lt;/p&gt;&#xA;&lt;p&gt;I’ve got the plugin infrastructure (mostly) in. Google Analytics Plugin and the RSS link plugin are working :)&lt;/p&gt;&#xA;&lt;p&gt;Next Step is to make &lt;a href=&#34;http://disqus.com&#34;&gt;DISQUS&lt;/a&gt; a plugin too, and then I can start on porting themes!&lt;/p&gt;</description>
    </item>
    <item>
      <title>My involvement in Novelrace</title>
      <link>https://words.yuvi.in/my-involvement-in-novelrace/</link>
      <pubDate>Thu, 02 Jul 2009 19:49:12 +0000</pubDate>
      <guid>https://words.yuvi.in/my-involvement-in-novelrace/</guid>
      <description>&lt;p&gt;It started when &lt;a href=&#34;http://sathyanarain.com/&#34;&gt;@msnarain&lt;/a&gt; pinged me one day and asked if I could help out with a small project involving twitter. I asked how small – and he described what would later on become &lt;a href=&#34;http://novelrace.in&#34;&gt;http://novelrace.in&lt;/a&gt;. It ended up being pretty small – about 150 lines of code, excluding styles and stuff. Not bad, eh?&lt;/p&gt;&#xA;&lt;p&gt;Oh, and if you have no idea what novelrace is – &lt;a href=&#34;http://aditya.wordpress.com/2009/06/09/novelrace/&#34;&gt;this post&lt;/a&gt; should clear things up. And yeah, I too tried participating (&lt;a href=&#34;http://yuvisense.net/emacs.html&#34;&gt;story 1&lt;/a&gt;, &lt;a href=&#34;http://yuvisense.net/cute-dress.html&#34;&gt;story 2&lt;/a&gt;, both written late at night), but I write crap :( Maybe some other time…&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
