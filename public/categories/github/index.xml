<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Yuvi</title>
    <link>https://words.yuvi.in/categories/github/</link>
    <description>Recent content in Github on Yuvi</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Nov 2022 23:17:53 -0800</lastBuildDate>
    <atom:link href="https://words.yuvi.in/categories/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installing Python (and other packages) from conda-forge in GitHub Actions</title>
      <link>https://words.yuvi.in/post/conda-forge-github-actions/</link>
      <pubDate>Sun, 06 Nov 2022 23:17:53 -0800</pubDate>
      <guid>https://words.yuvi.in/post/conda-forge-github-actions/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hachyderm.io/web/@asm@qoto.org/109294147156073488&#34;&gt;Alex Merose asked me&lt;/a&gt; on Mastodon how to&#xA;best set up a conda environment on GitHub Actions. I thought I&amp;rsquo;d write a short blog post about it!&lt;/p&gt;&#xA;&lt;p&gt;The short version is, use the &lt;a href=&#34;https://github.com/marketplace/actions/setup-miniconda&#34;&gt;conda-incubator/setup-miniconda&lt;/a&gt;&#xA;GitHub action instead of the official &lt;a href=&#34;https://github.com/marketplace/actions/setup-python&#34;&gt;setup-python&lt;/a&gt;&#xA;action. Specifically, try out these options for size:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;conda-incubator/setup-miniconda@v2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Specify python version your environment will have. Remember to quote this, or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# YAML will think you want python 3.1 not 3.10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;python-version&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;3.10&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# This uses *miniforge*, rather than *minicond*. The primary difference is that&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# the defaults channel is not enabled at all&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;miniforge-version&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# These properties enable the use of mamba, which is much faster and far less error&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# prone than conda while being completely compatible with the conda CLI&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;use-mamba&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;mamba-version&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This should give you a python environment named &lt;code&gt;test&lt;/code&gt; with python &lt;code&gt;3.10&lt;/code&gt; (or whatever version&#xA;you specify) and nothing much else. You can then use &lt;a href=&#34;https://github.com/mamba-org/mamba&#34;&gt;&lt;code&gt;mamba&lt;/code&gt;&lt;/a&gt;&#xA;to install packages from &lt;a href=&#34;https://conda-forge.org/&#34;&gt;conda-forge&lt;/a&gt; to your heart&amp;rsquo;s content in future&#xA;steps like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Python (instead of bash) to write GitHub actions</title>
      <link>https://words.yuvi.in/post/python-in-github-actions/</link>
      <pubDate>Tue, 01 Nov 2022 23:04:56 -0700</pubDate>
      <guid>https://words.yuvi.in/post/python-in-github-actions/</guid>
      <description>&lt;p&gt;I am not smart enough to consistently write &lt;em&gt;and&lt;/em&gt; debug shell scripts that use &lt;em&gt;any&lt;/em&gt;&#xA;conditional or looping constructs. So as soon as I&amp;rsquo;m writing something in bash that&#xA;requires use of those, I switch to python. This works fine when writing scripts, but&#xA;what to do when writing &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt; workflows?&#xA;You can only write bash in &lt;code&gt;run:&lt;/code&gt; stanzas in your &lt;code&gt;step&lt;/code&gt;s, right?&lt;/p&gt;&#xA;&lt;p&gt;Not at all! You can set the &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell&#34;&gt;shell&lt;/a&gt;&#xA;parameter to anything you want, and the contents of &lt;code&gt;run&lt;/code&gt; will be passed to the shell in the&#xA;form of a file. This allows you to use not just Python, but basically any langauge when writing&#xA;your GitHub actions workflows.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
